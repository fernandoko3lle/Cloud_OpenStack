{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"Overview/","title":"\ud83d\udcca Documenta\u00e7\u00e3o - API de Scraping B3 com Autentica\u00e7\u00e3o JWT","text":"<p>Este projeto consiste em uma API RESTful desenvolvida com FastAPI, que realiza scraping de dados da B3 (Bolsa de Valores do Brasil) e disponibiliza os dados para usu\u00e1rios autenticados via JWT.</p>"},{"location":"Overview/#explicacao-do-projeto","title":"\ud83d\udd0d Explica\u00e7\u00e3o do Projeto","text":"<p>O sistema realiza scraping dos dados da B3 com informa\u00e7\u00f5es como data, abertura, fechamento, volume, entre outros.</p> <ul> <li>Linguagem principal: Python</li> <li>Framework: FastAPI</li> <li>Containeriza\u00e7\u00e3o com Docker</li> <li>Banco de dados: PostgreSQL</li> <li>Balanceamento e proxy reverso com NGINX</li> </ul>"},{"location":"Overview/#endpoints-da-api","title":"\ud83d\udce6 Endpoints da API","text":"M\u00e9todo Rota Descri\u00e7\u00e3o POST <code>/registrar</code> Cria novo usu\u00e1rio POST <code>/login</code> Retorna token JWT GET <code>/consultar</code> Consulta dados (requer JWT)"},{"location":"Overview/#estrutura-do-projeto","title":"\ud83d\udcc2 Estrutura do Projeto","text":"<pre><code>Cloud_OpenStack/\n\u251c\u2500\u2500 api_rest/\n\u2502   \u251c\u2500\u2500 api/\n\u2502   \u2502   \u251c\u2500\u2500 app/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 app.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 auth.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 database.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 models.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 schemas.py\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 scraping.py\n\u2502   \u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2502   \u2514\u2500\u2500 requirements.txt\n\u2502   \u251c\u2500\u2500 nginx/\n\u2502   \u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2502   \u2514\u2500\u2500 default.conf\n\u2502   \u251c\u2500\u2500 .env\n\u2502   \u2514\u2500\u2500 docker-compose.yaml\n</code></pre>"},{"location":"Overview/#video","title":"\ud83c\udfa5 V\u00eddeo","text":"<ul> <li>Demonstra\u00e7\u00e3o curta do funcionamento</li> </ul>"},{"location":"Rodando_Localmente/","title":"\ud83d\ude80 Como Rodar Localmente","text":"<p>Siga os passos abaixo para clonar o projeto, configurar suas vari\u00e1veis de ambiente e executar a aplica\u00e7\u00e3o via Docker Compose.</p>"},{"location":"Rodando_Localmente/#1-clone-o-repositorio","title":"\ud83d\udd01 1. Clone o Reposit\u00f3rio","text":"<p>Abra seu terminal e execute:</p> <pre><code>git clone https://github.com/seu-usuario/seu-repositorio.git\ncd seu-repositorio\n</code></pre>"},{"location":"Rodando_Localmente/#2-configure-o-ambiente","title":"\u2699\ufe0f 2. Configure o Ambiente","text":"<p>Crie e edite o arquivo <code>.env</code> com as seguintes vari\u00e1veis (exemplo abaixo):</p> <pre><code>SECRET_KEY=123\nPOSTGRES_USER=123\nPOSTGRES_PASSWORD=123\nPOSTGRES_DB=123\nDATABASE_URL=postgresql://cloud:secret@db:5432/cloud\nADMIN_SECRET=123\n</code></pre> <p>\u26a0\ufe0f Importante: essas credenciais s\u00e3o usadas apenas para fins de aprendizado. Em produ\u00e7\u00e3o, utilize valores seguros!</p> \ud83d\udcc1 Entenda + sobre a vari\u00e1vel de Ambiente <code>DATABASE_URL</code> <p>A vari\u00e1vel <code>DATABASE_URL</code> \u00e9 essencial para a comunica\u00e7\u00e3o entre a aplica\u00e7\u00e3o FastAPI e o banco de dados PostgreSQL dentro do ambiente Docker Compose. Ela define os par\u00e2metros necess\u00e1rios para a conex\u00e3o com o banco de dados.</p> <p>\ud83d\udd10 Manter essas credenciais protegidas \u00e9 fundamental para a seguran\u00e7a da sua aplica\u00e7\u00e3o!</p>"},{"location":"Rodando_Localmente/#estrutura-do-valor","title":"\ud83e\uddea Estrutura do Valor","text":"<pre><code>DATABASE_URL=postgresql://cloud:secret@db:5432/cloud\n</code></pre>"},{"location":"Rodando_Localmente/#explicacao","title":"\ud83d\udd0d Explica\u00e7\u00e3o","text":"Parte Significado <code>postgresql://</code> Define o tipo do banco de dados utilizado. Neste caso, PostgreSQL. <code>cloud:</code> Nome do usu\u00e1rio do banco de dados. <code>secret@</code> Senha do banco de dados correspondente ao usu\u00e1rio. <code>db:</code> Hostname do servi\u00e7o de banco de dados (nome do container Docker). <code>5432</code> Porta padr\u00e3o utilizada pelo PostgreSQL. <code>/cloud</code> Nome do banco de dados que ser\u00e1 acessado pela aplica\u00e7\u00e3o."},{"location":"Rodando_Localmente/#importancia","title":"\ud83e\uddf1 Import\u00e2ncia","text":"<p>Essa vari\u00e1vel evita que credenciais sens\u00edveis fiquem hardcoded no c\u00f3digo-fonte e permite a personaliza\u00e7\u00e3o do ambiente via <code>.env</code>, promovendo maior seguran\u00e7a, flexibilidade e portabilidade entre ambientes (desenvolvimento, staging, produ\u00e7\u00e3o...).</p>"},{"location":"Rodando_Localmente/#observacoes","title":"\ud83d\udccc Observa\u00e7\u00f5es","text":"<ul> <li>O nome <code>db</code> corresponde ao nome do servi\u00e7o no <code>docker-compose.yaml</code>.</li> <li>Todos os valores (usu\u00e1rio, senha, host e nome do banco) devem coincidir com os definidos no servi\u00e7o <code>db</code>.</li> </ul>"},{"location":"Rodando_Localmente/#3-construa-os-conteineres","title":"\ud83d\udee0\ufe0f 3. Construa os Cont\u00eaineres","text":"<p>Execute o comando para construir as imagens Docker:</p> <pre><code>docker compose build\n</code></pre>"},{"location":"Rodando_Localmente/#4-suba-a-aplicacao","title":"\u25b6\ufe0f 4. Suba a Aplica\u00e7\u00e3o","text":"<p>Inicie todos os servi\u00e7os com:</p> <pre><code>docker compose up\n</code></pre>"},{"location":"Rodando_Localmente/#acesse-no-navegador","title":"\ud83c\udf10 Acesse no Navegador","text":"<p>A aplica\u00e7\u00e3o estar\u00e1 dispon\u00edvel em:</p> <pre><code>http://localhost:8000/docs\n</code></pre> <p>Utilize a interface interativa da FastAPI para testar os endpoints.</p>"},{"location":"compose/","title":"\u2699\ufe0f Arquivo <code>docker-compose.yaml</code>","text":"<p>Este arquivo \u00e9 respons\u00e1vel por orquestrar os tr\u00eas principais cont\u00eaineres do projeto: NGINX, FastAPI e PostgreSQL. Ele define a forma como esses servi\u00e7os interagem entre si e com o ambiente externo.</p>"},{"location":"compose/#estrutura-geral","title":"\ud83d\udcc2 Estrutura Geral","text":"<pre><code>name: cloud\n\nservices:\n  web:\n    image: fernandokoelle/nginx_proxy\n    ports:\n      - \"8000:80\"\n    depends_on:\n      - api\n    restart: on-failure\n  api:\n    hostname: api\n    image: fernandokoelle/scraping_de_dados_b3:latest\n    environment:\n      DATABASE_URL: postgresql://cloud:secret@db:5432/cloud\n      SECRET_KEY: ${SECRET_KEY:-supersegredo}\n      ADMIN_SECRET: ${ADMIN_SECRET:-123}\n    depends_on:\n      - db\n    restart: on-failure\n\n  db:\n    hostname: db\n    image: postgres:latest\n    environment: \n      POSTGRES_DB: ${POSTGRES_DB:-cloud}\n      POSTGRES_USER: ${POSTGRES_USER:-cloud}\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}\n    restart: on-failure\n</code></pre>"},{"location":"compose/#ordem-de-inicializacao","title":"\ud83d\udd01 Ordem de Inicializa\u00e7\u00e3o","text":"<ol> <li>O servi\u00e7o <code>db</code> \u00e9 iniciado primeiro (PostgreSQL).</li> <li>Em seguida, a <code>api</code>, que depende do banco de dados para iniciar corretamente.</li> <li>Por fim, o <code>web</code>, que age como proxy reverso, redirecionando as requisi\u00e7\u00f5es da porta 8000 para a API.</li> </ol>"},{"location":"compose/#explicacao-de-cada-servico","title":"\ud83d\udd0d Explica\u00e7\u00e3o de cada servi\u00e7o:","text":""},{"location":"compose/#web-nginx-proxy","title":"\ud83e\udded <code>web</code> (NGINX Proxy)","text":"<ul> <li>Fun\u00e7\u00e3o: redirecionar requisi\u00e7\u00f5es externas para a API.</li> <li>Porta exposta: <code>8000 -&gt; 80</code>.</li> </ul>"},{"location":"compose/#api-fastapi","title":"\ud83e\udde0 <code>api</code> (FastAPI)","text":"<ul> <li>Respons\u00e1vel por processar requisi\u00e7\u00f5es, autenticar usu\u00e1rios e interagir com o banco de dados.</li> <li>Usa vari\u00e1veis de ambiente para configura\u00e7\u00e3o.</li> </ul>"},{"location":"compose/#db-postgresql","title":"\ud83e\uddf1 <code>db</code> (PostgreSQL)","text":"<ul> <li>Banco de dados da aplica\u00e7\u00e3o.</li> <li>Usa senha e nome de banco definidos no <code>.env</code>.</li> </ul>"},{"location":"compose/#seguranca-e-producao","title":"\ud83d\udd10 Seguran\u00e7a e Produ\u00e7\u00e3o","text":"<ul> <li>Nunca exponha portas desnecess\u00e1rias. Somente a porta <code>8000</code> est\u00e1 vis\u00edvel neste projeto.</li> <li>As credenciais sens\u00edveis est\u00e3o externalizadas via <code>.env</code>, n\u00e3o deixe esse arquivo p\u00fablico.</li> <li>Utilize imagens validadas no Docker Hub para ambientes de produ\u00e7\u00e3o.</li> </ul>"},{"location":"compose/#dicas-de-customizacao","title":"\u270d\ufe0f Dicas de Customiza\u00e7\u00e3o","text":"<ul> <li>Para rodar em uma porta diferente, altere <code>8000:80</code> para <code>sua_porta:80</code> na se\u00e7\u00e3o <code>web</code>.</li> <li>Voc\u00ea pode adicionar um volume para persist\u00eancia dos dados do banco, se desejar.</li> <li>Para logar e testar, acesse <code>http://localhost:8000/docs</code> no navegador.</li> </ul>"},{"location":"dockerhub/","title":"\ud83d\udce4 Publica\u00e7\u00e3o no Docker Hub","text":"<p>A publica\u00e7\u00e3o das imagens Docker foi feita via linha de comando, conforme instru\u00e7\u00f5es da entrega. As imagens est\u00e3o dispon\u00edveis publicamente no Docker Hub:</p> <ul> <li>\ud83d\udd17 API: fernandokoelle/scraping_de_dados_b3</li> <li>\ud83d\udd17 NGINX Proxy: fernandokoelle/nginx_proxy_cloud</li> </ul>"},{"location":"dockerhub/#comandos-utilizados","title":"\ud83d\udd27 Comandos utilizados","text":""},{"location":"dockerhub/#1-acesse-o-diretorio-da-api","title":"1. Acesse o diret\u00f3rio da API:","text":"<pre><code>cd api_rest/api\n</code></pre>"},{"location":"dockerhub/#2-build-da-imagem-da-api","title":"2. Build da imagem da API","text":"<pre><code>docker build -t fernandokoelle/scraping_de_dados_b3 .\n</code></pre>"},{"location":"dockerhub/#3-push-da-imagem-da-api","title":"3. Push da imagem da API","text":"<pre><code>docker push fernandokoelle/scraping_de_dados_b3\n</code></pre>"},{"location":"dockerhub/#4-acesse-o-diretorio-do-nginx","title":"4. Acesse o diret\u00f3rio do NGINX:","text":"<pre><code>cd ../nginx\n</code></pre>"},{"location":"dockerhub/#5-build-da-imagem-do-nginx","title":"5. Build da imagem do NGINX","text":"<pre><code>docker build -t fernandokoelle/nginx_proxy_cloud .\n</code></pre>"},{"location":"dockerhub/#6-push-da-imagem-do-nginx","title":"6. Push da imagem do NGINX","text":"<pre><code>docker push fernandokoelle/nginx_proxy_cloud\n</code></pre> <p>Aten\u00e7\u00e3o</p> <ul> <li>Certifique-se de estar logado com <code>docker login</code> antes de fazer o push.</li> <li>As imagens s\u00e3o utilizadas diretamente no <code>docker-compose.yaml</code>, sem etapas de build no compose.</li> </ul>"},{"location":"seguranca/","title":"\ud83d\udee1\ufe0f Seguran\u00e7a e Arquitetura da Aplica\u00e7\u00e3o","text":"<p>Esta p\u00e1gina apresenta um panorama da seguran\u00e7a implementada na API e da arquitetura dos servi\u00e7os em Docker.</p>"},{"location":"seguranca/#mecanismos-de-seguranca","title":"\ud83d\udd10 Mecanismos de Seguran\u00e7a","text":""},{"location":"seguranca/#autenticacao-jwt","title":"\u2705 Autentica\u00e7\u00e3o JWT","text":"<p>A autentica\u00e7\u00e3o \u00e9 feita utilizando JSON Web Tokens (JWT). Ap\u00f3s o login, o usu\u00e1rio recebe um token que deve ser enviado no cabe\u00e7alho <code>Authorization</code> para acessar rotas protegidas, como <code>/consultar</code>.</p> <pre><code>Authorization: Bearer &lt;token_jwt&gt;\n</code></pre>"},{"location":"seguranca/#registro-protegido","title":"\ud83d\udd12 Registro Protegido","text":"<p>A cria\u00e7\u00e3o de novos usu\u00e1rios est\u00e1 protegida com uma chave administrativa (<code>admin_secret</code>), definida no <code>.env</code>. Isso evita o registro indiscriminado por qualquer pessoa na internet.</p> <p>Exemplo de body no registro:</p> <pre><code>{\n  \"nome\": \"Usu\u00e1rio\",\n  \"email\": \"usuario@email.com\",\n  \"senha\": \"123\",\n  \"admin_secret\": \"segredo-administrativo\"\n}\n</code></pre> <p>\u26a0\ufe0f Apenas usu\u00e1rios com o <code>admin_secret</code> correto podem registrar e obter o token JWT.</p>"},{"location":"seguranca/#variaveis-de-ambiente","title":"\u2699\ufe0f Vari\u00e1veis de Ambiente","text":"<p>Todas as credenciais sens\u00edveis est\u00e3o armazenadas no <code>.env</code> e s\u00e3o passadas via <code>docker-compose.yaml</code> como vari\u00e1veis de ambiente, mantendo o c\u00f3digo seguro e configur\u00e1vel.</p>"},{"location":"seguranca/#mapa-de-rotas","title":"\ud83e\udded Mapa de Rotas","text":"Rota M\u00e9todo Protegida Descri\u00e7\u00e3o <code>/registrar</code> POST \u26a0\ufe0f Parcial Protegida por <code>admin_secret</code> <code>/login</code> POST \u274c Retorna token JWT <code>/consultar</code> GET \u2705 Requer token no header"},{"location":"seguranca/#fluxo-de-arquitetura","title":"\ud83c\udf10 Fluxo de Arquitetura","text":"<p>A aplica\u00e7\u00e3o \u00e9 executada com Docker Compose e composta por tr\u00eas servi\u00e7os: NGINX (proxy reverso), API (FastAPI) e PostgreSQL (banco de dados).</p> <p>O fluxo pode ser representado da seguinte forma:</p> <p> </p>"},{"location":"seguranca/#conexoes","title":"\ud83d\udd17 Conex\u00f5es","text":"<ul> <li>NGINX recebe as requisi\u00e7\u00f5es na porta 8000 e redireciona para o servi\u00e7o da API.</li> <li>A API gerencia autentica\u00e7\u00e3o, scraping e acesso ao banco.</li> <li>O banco PostgreSQL armazena os dados dos usu\u00e1rios.</li> <li>Tudo roda isolado em containers e comunica-se por uma rede Docker interna.</li> </ul>"},{"location":"utilizacao/","title":"\ud83d\udcf8 Ulitiza\u00e7\u00e3o","text":""},{"location":"utilizacao/#registro-de-usuario","title":"\ud83d\udd10 Registro de Usu\u00e1rio","text":"<p>Para registrar um novo usu\u00e1rio, envie um <code>POST</code> para <code>/registrar</code> com:</p> <pre><code>{\n  \"nome\": \"Seu Nome\",\n  \"email\": \"seu@email.com\",\n  \"senha\": \"suasenha\",\n  \"admin_secret\": \"segredo-administrativo\"\n}\n</code></pre> <p>\u26a0\ufe0f O campo <code>admin_secret</code> \u00e9 obrigat\u00f3rio e deve coincidir com o valor da vari\u00e1vel <code>ADMIN_SECRET</code>.</p>"},{"location":"utilizacao/#requisicao-de-registro","title":"\ud83d\udce4 Requisi\u00e7\u00e3o de Registro","text":""},{"location":"utilizacao/#resposta-esperada","title":"\ud83d\udce5 Resposta Esperada","text":""},{"location":"utilizacao/#login","title":"\ud83d\udd11 Login","text":"<p>Envie um <code>POST</code> para <code>/login</code> com:</p> <pre><code>{\n  \"email\": \"seu@email.com\",\n  \"senha\": \"suasenha\"\n}\n</code></pre> <p>Voc\u00ea receber\u00e1 um token JWT. Exemplo:</p> <pre><code>{\n  \"jwt\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n</code></pre>"},{"location":"utilizacao/#requisicao-de-login","title":"\ud83d\udce4 Requisi\u00e7\u00e3o de Login","text":""},{"location":"utilizacao/#resposta-com-token","title":"\ud83d\udce5 Resposta com Token","text":""},{"location":"utilizacao/#consulta-rota-protegida","title":"\ud83d\udd0e Consulta (Rota Protegida)","text":"<p>Para acessar a rota <code>/consultar</code>, inclua o JWT no cabe\u00e7alho da requisi\u00e7\u00e3o:</p> <pre><code>Authorization: Bearer &lt;seu_token_jwt&gt;\n</code></pre>"},{"location":"utilizacao/#erros-comuns-e-uso-correto-do-token-jwt","title":"\u26a0\ufe0f Erros comuns e uso correto do token JWT","text":"<p>Ao testar via navegador, \u00e9 comum esquecer de incluir o token JWT, o que resulta em erro de autentica\u00e7\u00e3o.</p>"},{"location":"utilizacao/#tentativa-de-acesso-sem-autenticacao","title":"\u274c Tentativa de acesso sem autentica\u00e7\u00e3o","text":""},{"location":"utilizacao/#onde-adicionar-o-token-recebido-no-login","title":"\ud83d\udd10 Onde adicionar o token recebido no login","text":"<p>No campo Authorization, selecione o tipo <code>Bearer</code> e cole o token JWT retornado:</p> <p></p>"},{"location":"utilizacao/#como-identificar-que-o-token-foi-adicionado-corretamente","title":"\ud83d\udd12 Como identificar que o token foi adicionado corretamente","text":"<p>Se o token estiver presente, um \u00edcone de cadeado fechado deve aparecer na interface:</p> <p></p>"},{"location":"utilizacao/#consulta-bem-sucedida-apos-autenticacao","title":"\u2705 Consulta bem-sucedida ap\u00f3s autentica\u00e7\u00e3o","text":"<p>Ap\u00f3s o token ser corretamente inserido, a requisi\u00e7\u00e3o protegida <code>/consultar</code> retorna os dados esperados:</p> <p></p>"}]}