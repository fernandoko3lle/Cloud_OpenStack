{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":""},{"location":"index.html#projeto-cloud-privada-hibrida-do-zero","title":"\ud83d\ude80 Projeto \u2014 Cloud Privada &amp; H\u00edbrida do Zero","text":"<p>(MAAS + Juju + OpenStack \u2022 Terraform \u2022 AWS Lightsail \u2022 FastAPI/Swagger) </p> <p>Transformei um kit de laborat\u00f3rio \u2014 6 Intel NUCs (10 GB \u2192 32 GB RAM, SSD 120 GB), switch D-Link 28 portas e roteador TP-Link TL-R470T+ \u2014 em uma nuvem privada completa, posteriormente integrada \u00e0 Amazon Lightsail.</p>"},{"location":"index.html#principais-entregas","title":"Principais Entregas","text":"<ul> <li>Provisionamento bare-metal </li> <li>Descoberta PXE e aloca\u00e7\u00e3o autom\u00e1tica de n\u00f3s via MAAS.  </li> <li> <p>Orquestra\u00e7\u00e3o de charms com Juju para implantar OpenStack (Keystone, Nova, Neutron, Cinder, Horizon, Ceph).</p> </li> <li> <p>Automa\u00e7\u00e3o &amp; IaC </p> </li> <li> <p>Scripts Terraform para rede, inst\u00e2ncias, IPs flutuantes e Security Groups \u2014 ambiente recriado em minutos.</p> </li> <li> <p>Servi\u00e7os &amp; Aplica\u00e7\u00e3o </p> </li> <li>Cria\u00e7\u00e3o de uma API REST (FastAPI) containerizada, documentada com Swagger.  </li> <li> <p>Pipeline h\u00edbrido: deployment na cloud privada + replica\u00e7\u00e3o na AWS Lightsail para comparativo de performance e custo.</p> </li> <li> <p>Observabilidade &amp; Escala </p> </li> <li>Dashboards Horizon, m\u00e9tricas Ceilometer e health-checks personalizados.  </li> <li>Adi\u00e7\u00e3o din\u00e2mica de n\u00f3s de compute e storage (Ceph OSD) sem downtime.</li> </ul> <p>Tech stack: MAAS \u2022 Juju \u2022 OpenStack \u2022 Terraform \u2022 Ceph \u2022 FastAPI \u2022 Docker \u2022 NGINX \u2022 AWS Lightsail Resultados: ambiente 100 % automatizado, escal\u00e1vel horizontalmente, com tempo de provisionamento \u2193 85 % e testes de API conclu\u00eddos em cen\u00e1rios privado \u2194 p\u00fablico.</p>"},{"location":"Iac/exercicio.html","title":"Plano de Implanta\u00e7\u00e3o de Sistema Cr\u00edtico em Public Cloud","text":"<p>Contexto Voc\u00ea \u00e9 o CTO de uma grande empresa com filiais em v\u00e1rias capitais brasileiras. Precisa implantar um sistema cr\u00edtico, de baixo custo e com dados sigilosos para a \u00e1rea operacional. A seguir encontram-se as respostas aos itens solicitados no exerc\u00edcio, j\u00e1 formatadas para uso direto no relat\u00f3rio.  </p>"},{"location":"Iac/exercicio.html#1-escolha-public-cloud","title":"1. Escolha: Public Cloud \u2705","text":"Crit\u00e9rio Public Cloud Private Cloud Por que escolher Public? Custo inicial Baixo CAPEX (modelo pay-as-you-go) Alto CAPEX (compra de hardware) Mant\u00e9m o projeto dentro do or\u00e7amento, libera capital para P&amp;D. Escalabilidade El\u00e1stica, global, autom\u00e1tica Limitada ao hardware pr\u00f3prio Suporta picos sazonais sem superprovisionar. Seguran\u00e7a Data centers com compliance (ISO 27001, SOC 2, LGPD-ready); cifragem por padr\u00e3o Total controle f\u00edsico, mas exige equipe dedicada Servi\u00e7os gerenciados de IAM, KMS e WAF reduzem risco humano. Time-to-market Provisionamento em minutos Semanas/meses (aquisi\u00e7\u00e3o e instala\u00e7\u00e3o) Entrega mais r\u00e1pida do valor de neg\u00f3cio. Alta disponibilidade Regi\u00f5es e zonas de disponibilidade prontas Requer sites redundantes DR/HA \u201cas a service\u201d, menor complexidade operacional. <p>Conclus\u00e3o: A Public Cloud atende aos requisitos de baixo custo, escalabilidade e seguran\u00e7a ao mesmo tempo \u2014 permitindo foco da equipe na l\u00f3gica de neg\u00f3cio em vez de infraestrutura.</p>"},{"location":"Iac/exercicio.html#2-por-que-precisamos-de-um-time-devops","title":"2. Por que precisamos de um time DevOps? \ud83d\udc65","text":"Responsabilidade DevOps Benef\u00edcio para a empresa Rationale para RH Automa\u00e7\u00e3o de CI/CD Releases frequentes, sem janelas de indisponibilidade Menos retrabalho e menor tempo de aprova\u00e7\u00e3o de mudan\u00e7as. Infraestrutura como C\u00f3digo (IaC) Configura\u00e7\u00f5es rastre\u00e1veis, audit\u00e1veis Reduz erros manuais e facilita auditorias de seguran\u00e7a. Observability &amp; SRE Monitoramento proativo, SLOs claros Evita interrup\u00e7\u00f5es prolongadas e melhora a experi\u00eancia do usu\u00e1rio. Cultura colaborativa Quebra silos Dev\u2013Ops, acelera feedback Ret\u00e9m talentos que buscam ambientes modernos e \u00e1geis. <p>Argumento para RH: Um time DevOps alinha\u2010se \u00e0 estrat\u00e9gia de neg\u00f3cios, diminuindo custos operacionais, aumentando a qualidade do software e reduzindo riscos de incidentes \u2014 impactando diretamente a receita e a satisfa\u00e7\u00e3o do cliente.</p>"},{"location":"Iac/exercicio.html#3-plano-de-dr-disaster-recovery-e-ha-high-availability","title":"3. Plano de DR (Disaster Recovery) e HA (High Availability) \ud83d\udee1\ufe0f","text":""},{"location":"Iac/exercicio.html#31-mapeamento-de-ameacas","title":"3.1 Mapeamento de Amea\u00e7as \ud83d\udd0d","text":"Categoria Amea\u00e7a espec\u00edfica Impacto potencial F\u00edsica Falha de data center regional Interrup\u00e7\u00e3o total de servi\u00e7os L\u00f3gica Erro de implanta\u00e7\u00e3o (bug) Degrada\u00e7\u00e3o de servi\u00e7o / perda de dados Seguran\u00e7a Ransomware / vazamento LGPD Multas e danos \u00e0 reputa\u00e7\u00e3o Operacional Falha humana em config. IAM Acesso n\u00e3o autorizado Externa Ataques DDoS volum\u00e9tricos Queda de disponibilidade"},{"location":"Iac/exercicio.html#32-acoes-prioritarias-de-recuperacao","title":"3.2 A\u00e7\u00f5es Priorit\u00e1rias de Recupera\u00e7\u00e3o \ud83d\ude91","text":"<ol> <li>Fail-over autom\u00e1tico para zona secund\u00e1ria (\u2264 1 min RTO).  </li> <li>Restauro point-in-time de banco de dados \u2264 15 min RPO.  </li> <li>Infraestrutura como C\u00f3digo para reprovisionar ambiente completo em &lt; 1 h.  </li> <li>Runbooks de incidentes versionados e testados em game days semestrais.  </li> </ol>"},{"location":"Iac/exercicio.html#33-politica-de-backup","title":"3.3 Pol\u00edtica de Backup \ud83d\udcbe","text":"Item Estrat\u00e9gia Frequ\u00eancia Snapshots hor\u00e1rios + full daily Reten\u00e7\u00e3o 35 dias em regi\u00e3o prim\u00e1ria; 90 dias em regi\u00e3o cross-region Criptografia At rest (KMS) e in transit (TLS 1.3) Teste de restore Mensal (autom\u00e1tico) + semestral (auditado) Respons\u00e1vel DevOps on-call (rota 24\u00d77)"},{"location":"Iac/exercicio.html#34-alta-disponibilidade-ha","title":"3.4 Alta Disponibilidade (HA) \u2699\ufe0f","text":"<ul> <li>Compute: Auto-Scaling Groups em 2+ zonas com balanceador (ALB).  </li> <li>Database: Pares Multi-AZ (PostgreSQL gerenciado) + r\u00e9plicas de leitura.  </li> <li>Cache/Queue: Redis/MQ multi-node com redistribui\u00e7\u00e3o autom\u00e1tica.  </li> <li>Network: Route 53 &amp; Anycast DNS para fail-over geo-redundante.  </li> <li>Observabilidade: M\u00e9tricas + logs centralizados em servi\u00e7o gerenciado (Grafana/Loki).  </li> </ul>"},{"location":"Iac/exercicio.html#4-cronograma-de-implementacao","title":"4. Cronograma de Implementa\u00e7\u00e3o \u23f1\ufe0f","text":"Fase Dura\u00e7\u00e3o Entreg\u00e1veis Kick-off &amp; Acesso \u00e0 Cloud 1 semana Contas, landing zone, IAM baseline IaC &amp; Pipelines CI/CD 2 semanas Reposit\u00f3rios Git, pipelines, testes MVP + HA 3 semanas App em 2 zonas, banco Multi-AZ DR &amp; Backups 2 semanas Rotinas de snapshot, cross-region Game Day &amp; Hardening 1 semana Testes de falha, revis\u00e3o de seguran\u00e7a Go-live \u2014 Change freeze + monitoramento 24\u00d77"},{"location":"Iac/resultados.html","title":"Resultados &amp; Evid\u00eancias \u2013 Roteiro\u00a04","text":"<p>Antes de apresentar os prints, vale contextualizar \ud83d\udd0d \u2014 os dois primeiros screenshots (Identity \u2192 Projects e Identity \u2192 Users dentro de <code>AlunosDomain</code>) foram capturados ap\u00f3s logarmos como <code>domainAdmin</code> e trocar o Current Project para esse dom\u00ednio. Os demais prints (Compute \u2192 Overview, Instances e Network \u2192 Topology) foram tirados j\u00e1 logados como cada aluno, que possui papel admin apenas no pr\u00f3prio projeto. Assim, mantemos o modelo multi-tenant: cada usu\u00e1rio v\u00ea somente seus recursos, enquanto o dom\u00ednio administrativo \u00e9 usado exclusivamente para auditoria global.</p>"},{"location":"Iac/resultados.html#1-dominio-alunosdomain","title":"1\u00a0\u00b7\u00a0Dom\u00ednio AlunosDomain","text":"Tela Screenshot Identity\u00a0\u2192\u00a0Projects"},{"location":"Iac/resultados.html#2-aluno-andre","title":"2\u00a0\u00b7\u00a0Aluno Andre","text":"Requisito Screenshot Identity\u00a0\u2192\u00a0Users Compute\u00a0\u2192\u00a0Overview Compute\u00a0\u2192\u00a0Instances Network\u00a0\u2192\u00a0Topology"},{"location":"Iac/resultados.html#3-aluno-fernando","title":"3\u00a0\u00b7\u00a0Aluno Fernando","text":"Requisito Screenshot Identity\u00a0\u2192\u00a0Users Compute\u00a0\u2192\u00a0Overview Compute\u00a0\u2192\u00a0Instances Network\u00a0\u2192\u00a0Topology"},{"location":"Iac/setUp.html","title":"Setup do Ambiente \u2013 Dom\u00ednio AlunosAdmin","text":""},{"location":"Iac/setUp.html#1-objetivos-da-estrutura-de-usuarios","title":"1. Objetivos da Estrutura de Usu\u00e1rios","text":"<ul> <li>Isolamento de recursos\u00a0\ud83d\udd12   Cada aluno opera em seu pr\u00f3prio projeto para evitar colis\u00f5es de redes, inst\u00e2ncias ou quotas.</li> <li>Delega\u00e7\u00e3o de permiss\u00f5es \ud83d\udc65   O papel Member \u00e9 concedido apenas no projeto individual; tarefas administrativas ficam restritas ao domainAdmin.</li> <li>Auditoria facilitada \ud83d\udcd1   Logs e m\u00e9tricas ficam segmentados por projeto, simplificando a cobran\u00e7a (quota) e o troubleshooting.</li> <li>Prepara\u00e7\u00e3o para DevOps / IaC \u2699\ufe0f   A hierarquia Domin\u00edo \u2192 Projetos \u2192 Usu\u00e1rios reflete o que ser\u00e1 usado no Terraform e em futuros pipelines CI/CD.</li> </ul>"},{"location":"Iac/setUp.html#2-passo-a-passo-no-dashboard-horizon","title":"2. Passo-a-Passo no Dashboard (Horizon)","text":"<p>Voc\u00ea precisar\u00e1 estar logado como domainAdmin (ou outro usu\u00e1rio com Admin no dom\u00ednio Default).</p> Etapa A\u00e7\u00e3o obs 2.1 Identity \u2192 Domains \u2192 Create Domain \u2022 Domain Name: <code>AlunosAdmin</code> \u2022 Enable: \u2714\ufe0f 2.2 Selecione o novo dom\u00ednio <code>AlunosAdmin</code> Identity \u2192 Projects \u2192 Create Project (repita para cada aluno) \u2022 Project Name: <code>kit-&lt;letra&gt;-&lt;aluno&gt;</code>\u2022 Description: \u201cProjeto individual do roteiro 4\u201d 2.3 Ainda dentro de <code>AlunosAdmin</code> Identity \u2192 Users \u2192 Create User \u2022 User Name: <code>&lt;aluno&gt;</code> \u2022 Primary Project: seu novo projeto \u2022 Password: definir / enviar ao aluno 2.4 Atribua pap\u00e9is (Manage Members) \u2022 Member no projeto do aluno \u2022 (Opcional) <code>reader</code> em outros projetos 2.5 Teste r\u00e1pido  Logout \u2192 login como <code>&lt;aluno&gt;</code> Deve enxergar somente o pr\u00f3prio projeto <p>\u2705 Checklist: dom\u00ednio criado, projetos individuais, usu\u00e1rios criados, cada usu\u00e1rio com acesso somente ao seu projeto.</p>"},{"location":"Iac/setUp.html#3-proximos-passos","title":"3. Pr\u00f3ximos Passos","text":"<ol> <li>Exportar o arquivo <code>openstack.rc</code> para cada usu\u00e1rio (via Horizon).  </li> <li>Usar essas credenciais nos comandos CLI / Terraform.  </li> <li>Conferir quotas (Compute, Network, Volume) e ajustar se necess\u00e1rio.</li> </ol>"},{"location":"Iac/terraform.html","title":"Terraform \u2013 Infraestrutura-como-C\u00f3digo no Roteiro 4","text":""},{"location":"Iac/terraform.html#1-por-que-usar-terraform","title":"1. Por que usar Terraform?","text":"Vantagem Benef\u00edcio pr\u00e1tico no roteiro Automa\u00e7\u00e3o Cria\u00e7\u00e3o, altera\u00e7\u00e3o e destrui\u00e7\u00e3o de recursos via <code>terraform apply</code> \u2013 sem cliques repetitivos no Horizon Idempot\u00eancia Rodar v\u00e1rias vezes gera sempre o mesmo estado (\u00fatil para testes e rollback) Versionamento Os arquivos <code>.tf</code> entram no Git, permitindo PRs, code review e auditoria Reprodutibilidade Outro colega/aluno pode clonar o repo, rodar <code>terraform init/apply</code> e obter a mesma topologia Plan before apply O comando <code>terraform plan</code> mostra diffs antes de alterar o ambiente, reduzindo erros"},{"location":"Iac/terraform.html#2-estrutura-de-pastas-adotada","title":"2. Estrutura de Pastas adotada","text":""},{"location":"Iac/terraform.html#terraform-providertf-networktf-routertf-keypairtf-instance1tf-instance2tf-floatingiptf","title":"<pre><code>terraform/\n\u251c\u2500\u2500 provider.tf\n\u251c\u2500\u2500 network.tf\n\u251c\u2500\u2500 router.tf\n\u251c\u2500\u2500 keypair.tf\n\u251c\u2500\u2500 instance1.tf\n\u251c\u2500\u2500 instance2.tf\n\u2514\u2500\u2500 floatingip.tf\n</code></pre>","text":""},{"location":"Iac/terraform.html#3-credenciais-openstack-arquivo-rc","title":"3. Credenciais OpenStack (arquivo RC)","text":"<ol> <li>No Horizon, como usu\u00e1rio do projeto do aluno, baixe o OpenStack RC file (ex.: <code>myproject-openrc.sh</code>).  </li> <li>Problema observado: quando faz\u00edamos <code>source myproject-openrc.sh</code> direto, algumas vari\u00e1veis entravam em conflito com vari\u00e1veis herdadas da VM (<code>/etc/profile.d/openstack.sh</code>).  </li> <li>Solu\u00e7\u00e3o adotada \u2013 \u201climpar\u201d primeiro o ambiente com o arquivo global e s\u00f3 ent\u00e3o carregar o RC espec\u00edfico:</li> </ol> <pre><code># 1) Exporta vari\u00e1veis gen\u00e9ricas (usu\u00e1rio cloud)\nsource /home/cloud/openrc       # caminho padr\u00e3o na VM teacher/cloud\n\n# 2) Em seguida, exporta as vari\u00e1veis do aluno/projeto\nsource ~/Downloads/myproject-openrc.sh\n</code></pre> <p>Isso garante que <code>OS_AUTH_URL</code>, <code>OS_USERNAME</code>, <code>OS_PROJECT_NAME</code>, etc. apontem para o projeto correto antes de chamar o Terraform.</p>"},{"location":"Iac/terraform.html#4-comandos-chave","title":"4. Comandos-chave","text":"<pre><code>cd terraform/\n\n# Inicializa o diret\u00f3rio (baixar provider, criar .terraform)\nterraform init\n\n# Pr\u00e9-visualiza mudan\u00e7as no ambiente\nterraform plan -out=tfplan\n\n# Aplica as mudan\u00e7as confirmadas\nterraform apply tfplan\n</code></pre> <p>Se precisar desfazer:</p> <pre><code>terraform destroy\n</code></pre>"},{"location":"Iac/terraform.html#5-codigo-terraform","title":"5. C\u00f3digo Terraform","text":"<code>floatingip.tf</code> <pre><code>data \"openstack_networking_network_v2\" \"ext\" {\n  name     = \"ext_net\"\n  external = true\n}\n\nresource \"openstack_networking_floatingip_v2\" \"fip_a\" {\n  pool = data.openstack_networking_network_v2.ext.name\n}\n\nresource \"openstack_networking_floatingip_v2\" \"fip_b\" {\n  pool = data.openstack_networking_network_v2.ext.name\n}\n\nresource \"openstack_compute_floatingip_associate_v2\" \"assoc_a\" {\n  floating_ip = openstack_networking_floatingip_v2.fip_a.address\n  instance_id = openstack_compute_instance_v2.instancia_1.id\n}\n\nresource \"openstack_compute_floatingip_associate_v2\" \"assoc_b\" {\n  floating_ip = openstack_networking_floatingip_v2.fip_b.address\n  instance_id = openstack_compute_instance_v2.instancia_2.id\n}\n</code></pre> <code>instance1.tf</code> <pre><code>resource \"openstack_compute_instance_v2\" \"instancia_1\" {\n  name            = \"basic\"\n  image_name      = \"jammy-amd64\"\n  flavor_name     = \"m1.small\"\n  key_pair        = \"my-keypair\"\n  security_groups = [\"default\"]\n\n  network {\n    name = \"network_1\"\n  }\n\n  depends_on = [openstack_networking_network_v2.network_1]\n\n}\n</code></pre> <code>instance2.tf</code> <pre><code>resource \"openstack_compute_instance_v2\" \"instancia_2\" {\n  name            = \"basic2\"\n  image_name      = \"jammy-amd64\"\n  flavor_name     = \"m1.tiny\"\n  key_pair        = \"my-keypair\"\n  security_groups = [\"default\"]\n\n  network {\n    name = \"network_1\"\n  }\n\n  depends_on = [openstack_networking_network_v2.network_1]\n\n}\n</code></pre> <code>keypair.tf</code> <pre><code>  GNU nano 6.2                                                                keypair.tf                                                                         \nresource \"openstack_compute_keypair_v2\" \"test-keypair\" {\n  name = \"my-keypair\"\n}\n</code></pre> <code>network.tf</code> <pre><code>resource \"openstack_networking_network_v2\" \"network_1\" {\n  name           = \"network_1\"\n  admin_state_up = \"true\"\n}\n\nresource \"openstack_networking_subnet_v2\" \"subnet_1\" {\n  network_id = \"${openstack_networking_network_v2.network_1.id}\"\n  cidr       = \"192.167.199.0/24\"\n}\n</code></pre> <code>provider.tf</code> <pre><code># Terraform Openstack deployment\n\n# Define required providers\nterraform {\nrequired_version = \"&gt;= 0.14.0\"\n  required_providers {\n    openstack = {\n      source  = \"terraform-provider-openstack/openstack\"\n      version = \"~&gt; 1.35.0\"\n    }\n  }\n}\n\n\n# Configure the OpenStack Provider\n\nprovider \"openstack\" {\n  region              = \"RegionOne\"\n  user_name           = \"FernandoKoelle\"\n}\n</code></pre> <code>router.tf</code> <pre><code>resource \"openstack_networking_router_v2\" \"router_1\" {\n  name                = \"my_router_f\"\n  admin_state_up      = true\n  external_network_id = \"6795929c-ee09-4c30-864f-e70c5074e1a2\"\n}\n\nresource \"openstack_networking_router_interface_v2\" \"int_1\" {\n  router_id = \"${openstack_networking_router_v2.router_1.id}\"\n  subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\"\n}\n</code></pre>"},{"location":"api/Rodando_Localmente.html","title":"\ud83d\ude80 Como Rodar Localmente","text":"<p>Siga os passos abaixo para clonar o projeto, configurar suas vari\u00e1veis de ambiente e executar a aplica\u00e7\u00e3o via Docker Compose.</p>"},{"location":"api/Rodando_Localmente.html#1-clone-o-repositorio","title":"\ud83d\udd01 1. Clone o Reposit\u00f3rio","text":"<p>Abra seu terminal e execute:</p> <pre><code>git clone https://github.com/seu-usuario/seu-repositorio.git\ncd seu-repositorio\n</code></pre>"},{"location":"api/Rodando_Localmente.html#2-configure-o-ambiente","title":"\u2699\ufe0f 2. Configure o Ambiente","text":"<p>Crie e edite o arquivo <code>.env</code> com as seguintes vari\u00e1veis (exemplo abaixo):</p> <pre><code>SECRET_KEY=123\nPOSTGRES_USER=123\nPOSTGRES_PASSWORD=123\nPOSTGRES_DB=123\nDATABASE_URL=postgresql://cloud:secret@db:5432/cloud\nADMIN_SECRET=123\n</code></pre> <p>\u26a0\ufe0f Importante: essas credenciais s\u00e3o usadas apenas para fins de aprendizado. Em produ\u00e7\u00e3o, utilize valores seguros!</p> \ud83d\udcc1 Entenda + sobre a vari\u00e1vel de Ambiente <code>DATABASE_URL</code> <p>A vari\u00e1vel <code>DATABASE_URL</code> \u00e9 essencial para a comunica\u00e7\u00e3o entre a aplica\u00e7\u00e3o FastAPI e o banco de dados PostgreSQL dentro do ambiente Docker Compose. Ela define os par\u00e2metros necess\u00e1rios para a conex\u00e3o com o banco de dados.</p> <p>\ud83d\udd10 Manter essas credenciais protegidas \u00e9 fundamental para a seguran\u00e7a da sua aplica\u00e7\u00e3o!</p>"},{"location":"api/Rodando_Localmente.html#estrutura-do-valor","title":"\ud83e\uddea Estrutura do Valor","text":"<pre><code>DATABASE_URL=postgresql://cloud:secret@db:5432/cloud\n</code></pre>"},{"location":"api/Rodando_Localmente.html#explicacao","title":"\ud83d\udd0d Explica\u00e7\u00e3o","text":"Parte Significado <code>postgresql://</code> Define o tipo do banco de dados utilizado. Neste caso, PostgreSQL. <code>cloud:</code> Nome do usu\u00e1rio do banco de dados. <code>secret@</code> Senha do banco de dados correspondente ao usu\u00e1rio. <code>db:</code> Hostname do servi\u00e7o de banco de dados (nome do container Docker). <code>5432</code> Porta padr\u00e3o utilizada pelo PostgreSQL. <code>/cloud</code> Nome do banco de dados que ser\u00e1 acessado pela aplica\u00e7\u00e3o."},{"location":"api/Rodando_Localmente.html#importancia","title":"\ud83e\uddf1 Import\u00e2ncia","text":"<p>Essa vari\u00e1vel evita que credenciais sens\u00edveis fiquem hardcoded no c\u00f3digo-fonte e permite a personaliza\u00e7\u00e3o do ambiente via <code>.env</code>, promovendo maior seguran\u00e7a, flexibilidade e portabilidade entre ambientes (desenvolvimento, staging, produ\u00e7\u00e3o...).</p>"},{"location":"api/Rodando_Localmente.html#observacoes","title":"\ud83d\udccc Observa\u00e7\u00f5es","text":"<ul> <li>O nome <code>db</code> corresponde ao nome do servi\u00e7o no <code>docker-compose.yaml</code>.</li> <li>Todos os valores (usu\u00e1rio, senha, host e nome do banco) devem coincidir com os definidos no servi\u00e7o <code>db</code>.</li> </ul>"},{"location":"api/Rodando_Localmente.html#3-construa-os-conteineres","title":"\ud83d\udee0\ufe0f 3. Construa os Cont\u00eaineres","text":"<p>Execute o comando para construir as imagens Docker:</p> <pre><code>docker compose build\n</code></pre>"},{"location":"api/Rodando_Localmente.html#4-suba-a-aplicacao","title":"\u25b6\ufe0f 4. Suba a Aplica\u00e7\u00e3o","text":"<p>Inicie todos os servi\u00e7os com:</p> <pre><code>docker compose up\n</code></pre>"},{"location":"api/Rodando_Localmente.html#acesse-no-navegador","title":"\ud83c\udf10 Acesse no Navegador","text":"<p>A aplica\u00e7\u00e3o estar\u00e1 dispon\u00edvel em:</p> <pre><code>http://localhost:8000/docs\n</code></pre> <p>Utilize a interface interativa da FastAPI para testar os endpoints.</p>"},{"location":"api/compose.html","title":"\u2699\ufe0f Arquivo <code>docker-compose.yaml</code>","text":"<p>Este arquivo \u00e9 respons\u00e1vel por orquestrar os tr\u00eas principais cont\u00eaineres do projeto: NGINX, FastAPI e PostgreSQL. Ele define a forma como esses servi\u00e7os interagem entre si e com o ambiente externo.</p>"},{"location":"api/compose.html#estrutura-geral","title":"\ud83d\udcc2 Estrutura Geral","text":"<pre><code>name: cloud\n\nservices:\n  web:\n    image: fernandokoelle/nginx_proxy\n    ports:\n      - \"8000:80\"\n    depends_on:\n      - api\n    restart: on-failure\n  api:\n    hostname: api\n    image: fernandokoelle/scraping_de_dados_b3:latest\n    environment:\n      DATABASE_URL: postgresql://cloud:secret@db:5432/cloud\n      SECRET_KEY: ${SECRET_KEY:-supersegredo}\n      ADMIN_SECRET: ${ADMIN_SECRET:-123}\n    depends_on:\n      - db\n    restart: on-failure\n\n  db:\n    hostname: db\n    image: postgres:latest\n    environment: \n      POSTGRES_DB: ${POSTGRES_DB:-cloud}\n      POSTGRES_USER: ${POSTGRES_USER:-cloud}\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}\n    restart: on-failure\n</code></pre>"},{"location":"api/compose.html#ordem-de-inicializacao","title":"\ud83d\udd01 Ordem de Inicializa\u00e7\u00e3o","text":"<ol> <li>O servi\u00e7o <code>db</code> \u00e9 iniciado primeiro (PostgreSQL).</li> <li>Em seguida, a <code>api</code>, que depende do banco de dados para iniciar corretamente.</li> <li>Por fim, o <code>web</code>, que age como proxy reverso, redirecionando as requisi\u00e7\u00f5es da porta 8000 para a API.</li> </ol>"},{"location":"api/compose.html#explicacao-de-cada-servico","title":"\ud83d\udd0d Explica\u00e7\u00e3o de cada servi\u00e7o:","text":""},{"location":"api/compose.html#web-nginx-proxy","title":"\ud83e\udded <code>web</code> (NGINX Proxy)","text":"<ul> <li>Fun\u00e7\u00e3o: redirecionar requisi\u00e7\u00f5es externas para a API.</li> <li>Porta exposta: <code>8000 -&gt; 80</code>.</li> </ul>"},{"location":"api/compose.html#api-fastapi","title":"\ud83e\udde0 <code>api</code> (FastAPI)","text":"<ul> <li>Respons\u00e1vel por processar requisi\u00e7\u00f5es, autenticar usu\u00e1rios e interagir com o banco de dados.</li> <li>Usa vari\u00e1veis de ambiente para configura\u00e7\u00e3o.</li> </ul>"},{"location":"api/compose.html#db-postgresql","title":"\ud83e\uddf1 <code>db</code> (PostgreSQL)","text":"<ul> <li>Banco de dados da aplica\u00e7\u00e3o.</li> <li>Usa senha e nome de banco definidos no <code>.env</code>.</li> </ul>"},{"location":"api/compose.html#seguranca-e-producao","title":"\ud83d\udd10 Seguran\u00e7a e Produ\u00e7\u00e3o","text":"<ul> <li>Nunca exponha portas desnecess\u00e1rias. Somente a porta <code>8000</code> est\u00e1 vis\u00edvel neste projeto.</li> <li>As credenciais sens\u00edveis est\u00e3o externalizadas via <code>.env</code>, n\u00e3o deixe esse arquivo p\u00fablico.</li> <li>Utilize imagens validadas no Docker Hub para ambientes de produ\u00e7\u00e3o.</li> </ul>"},{"location":"api/compose.html#dicas-de-customizacao","title":"\u270d\ufe0f Dicas de Customiza\u00e7\u00e3o","text":"<ul> <li>Para rodar em uma porta diferente, altere <code>8000:80</code> para <code>sua_porta:80</code> na se\u00e7\u00e3o <code>web</code>.</li> <li>Voc\u00ea pode adicionar um volume para persist\u00eancia dos dados do banco, se desejar.</li> <li>Para logar e testar, acesse <code>http://localhost:8000/docs</code> no navegador.</li> </ul>"},{"location":"api/dockerhub.html","title":"\ud83d\udce4 Publica\u00e7\u00e3o no Docker Hub","text":"<p>A publica\u00e7\u00e3o das imagens Docker foi feita via linha de comando, conforme instru\u00e7\u00f5es da entrega. As imagens est\u00e3o dispon\u00edveis publicamente no Docker Hub:</p> <ul> <li>\ud83d\udd17 API: fernandokoelle/scraping_de_dados_b3</li> <li>\ud83d\udd17 NGINX Proxy: fernandokoelle/nginx_proxy_cloud</li> </ul>"},{"location":"api/dockerhub.html#comandos-utilizados","title":"\ud83d\udd27 Comandos utilizados","text":""},{"location":"api/dockerhub.html#1-acesse-o-diretorio-da-api","title":"1. Acesse o diret\u00f3rio da API:","text":"<pre><code>cd api_rest/api\n</code></pre>"},{"location":"api/dockerhub.html#2-build-da-imagem-da-api","title":"2. Build da imagem da API","text":"<pre><code>docker build -t fernandokoelle/scraping_de_dados_b3 .\n</code></pre>"},{"location":"api/dockerhub.html#3-push-da-imagem-da-api","title":"3. Push da imagem da API","text":"<pre><code>docker push fernandokoelle/scraping_de_dados_b3\n</code></pre>"},{"location":"api/dockerhub.html#4-acesse-o-diretorio-do-nginx","title":"4. Acesse o diret\u00f3rio do NGINX:","text":"<pre><code>cd ../nginx\n</code></pre>"},{"location":"api/dockerhub.html#5-build-da-imagem-do-nginx","title":"5. Build da imagem do NGINX","text":"<pre><code>docker build -t fernandokoelle/nginx_proxy_cloud .\n</code></pre>"},{"location":"api/dockerhub.html#6-push-da-imagem-do-nginx","title":"6. Push da imagem do NGINX","text":"<pre><code>docker push fernandokoelle/nginx_proxy_cloud\n</code></pre> <p>Aten\u00e7\u00e3o</p> <ul> <li>Certifique-se de estar logado com <code>docker login</code> antes de fazer o push.</li> <li>As imagens s\u00e3o utilizadas diretamente no <code>docker-compose.yaml</code>, sem etapas de build no compose.</li> </ul>"},{"location":"api/overview.html","title":"\ud83d\udcca Documenta\u00e7\u00e3o - API de Scraping B3 com Autentica\u00e7\u00e3o JWT","text":"<p>Este projeto consiste em uma API RESTful desenvolvida com FastAPI, que realiza scraping de dados da B3 (Bolsa de Valores do Brasil) e disponibiliza os dados para usu\u00e1rios autenticados via JWT.</p>"},{"location":"api/overview.html#explicacao-do-projeto","title":"\ud83d\udd0d Explica\u00e7\u00e3o do Projeto","text":"<p>O sistema realiza scraping dos dados da B3 com informa\u00e7\u00f5es como data, abertura, fechamento, volume, entre outros.</p> <ul> <li>Linguagem principal: Python</li> <li>Framework: FastAPI</li> <li>Containeriza\u00e7\u00e3o com Docker</li> <li>Banco de dados: PostgreSQL</li> <li>Balanceamento e proxy reverso com NGINX</li> </ul>"},{"location":"api/overview.html#endpoints-da-api","title":"\ud83d\udce6 Endpoints da API","text":"M\u00e9todo Rota Descri\u00e7\u00e3o POST <code>/registrar</code> Cria novo usu\u00e1rio POST <code>/login</code> Retorna token JWT GET <code>/consultar</code> Consulta dados (requer JWT)"},{"location":"api/overview.html#estrutura-do-projeto","title":"\ud83d\udcc2 Estrutura do Projeto","text":"<pre><code>Cloud_OpenStack/\n\u251c\u2500\u2500 api_rest/\n\u2502   \u251c\u2500\u2500 api/\n\u2502   \u2502   \u251c\u2500\u2500 app/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 app.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 auth.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 database.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 models.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 schemas.py\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 scraping.py\n\u2502   \u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2502   \u2514\u2500\u2500 requirements.txt\n\u2502   \u251c\u2500\u2500 nginx/\n\u2502   \u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2502   \u2514\u2500\u2500 default.conf\n\u2502   \u251c\u2500\u2500 .env\n\u2502   \u2514\u2500\u2500 docker-compose.yaml\n</code></pre>"},{"location":"api/overview.html#video","title":"\ud83c\udfa5 V\u00eddeo","text":"<ul> <li>Demonstra\u00e7\u00e3o curta do funcionamento</li> </ul>"},{"location":"api/seguranca.html","title":"\ud83d\udee1\ufe0f Seguran\u00e7a e Arquitetura da Aplica\u00e7\u00e3o","text":"<p>Esta p\u00e1gina apresenta um panorama da seguran\u00e7a implementada na API e da arquitetura dos servi\u00e7os em Docker.</p>"},{"location":"api/seguranca.html#mecanismos-de-seguranca","title":"\ud83d\udd10 Mecanismos de Seguran\u00e7a","text":""},{"location":"api/seguranca.html#autenticacao-jwt","title":"\u2705 Autentica\u00e7\u00e3o JWT","text":"<p>A autentica\u00e7\u00e3o \u00e9 feita utilizando JSON Web Tokens (JWT). Ap\u00f3s o login, o usu\u00e1rio recebe um token que deve ser enviado no cabe\u00e7alho <code>Authorization</code> para acessar rotas protegidas, como <code>/consultar</code>.</p> <pre><code>Authorization: Bearer &lt;token_jwt&gt;\n</code></pre>"},{"location":"api/seguranca.html#registro-protegido","title":"\ud83d\udd12 Registro Protegido","text":"<p>A cria\u00e7\u00e3o de novos usu\u00e1rios est\u00e1 protegida com uma chave administrativa (<code>admin_secret</code>), definida no <code>.env</code>. Isso evita o registro indiscriminado por qualquer pessoa na internet.</p> <p>Exemplo de body no registro:</p> <pre><code>{\n  \"nome\": \"Usu\u00e1rio\",\n  \"email\": \"usuario@email.com\",\n  \"senha\": \"123\",\n  \"admin_secret\": \"segredo-administrativo\"\n}\n</code></pre> <p>\u26a0\ufe0f Apenas usu\u00e1rios com o <code>admin_secret</code> correto podem registrar e obter o token JWT.</p>"},{"location":"api/seguranca.html#variaveis-de-ambiente","title":"\u2699\ufe0f Vari\u00e1veis de Ambiente","text":"<p>Todas as credenciais sens\u00edveis est\u00e3o armazenadas no <code>.env</code> e s\u00e3o passadas via <code>docker-compose.yaml</code> como vari\u00e1veis de ambiente, mantendo o c\u00f3digo seguro e configur\u00e1vel.</p>"},{"location":"api/seguranca.html#mapa-de-rotas","title":"\ud83e\udded Mapa de Rotas","text":"Rota M\u00e9todo Protegida Descri\u00e7\u00e3o <code>/registrar</code> POST \u26a0\ufe0f Parcial Protegida por <code>admin_secret</code> <code>/login</code> POST \u274c Retorna token JWT <code>/consultar</code> GET \u2705 Requer token no header"},{"location":"api/seguranca.html#fluxo-de-arquitetura","title":"\ud83c\udf10 Fluxo de Arquitetura","text":"<p>A aplica\u00e7\u00e3o \u00e9 executada com Docker Compose e composta por tr\u00eas servi\u00e7os: NGINX (proxy reverso), API (FastAPI) e PostgreSQL (banco de dados).</p> <p>O fluxo pode ser representado da seguinte forma:</p> <p> </p>"},{"location":"api/seguranca.html#conexoes","title":"\ud83d\udd17 Conex\u00f5es","text":"<ul> <li>NGINX recebe as requisi\u00e7\u00f5es na porta 8000 e redireciona para o servi\u00e7o da API.</li> <li>A API gerencia autentica\u00e7\u00e3o, scraping e acesso ao banco.</li> <li>O banco PostgreSQL armazena os dados dos usu\u00e1rios.</li> <li>Tudo roda isolado em containers e comunica-se por uma rede Docker interna.</li> </ul>"},{"location":"api/utilizacao.html","title":"\ud83d\udcf8 Ulitiza\u00e7\u00e3o","text":""},{"location":"api/utilizacao.html#registro-de-usuario","title":"\ud83d\udd10 Registro de Usu\u00e1rio","text":"<p>Para registrar um novo usu\u00e1rio, envie um <code>POST</code> para <code>/registrar</code> com:</p> <pre><code>{\n  \"nome\": \"Seu Nome\",\n  \"email\": \"seu@email.com\",\n  \"senha\": \"suasenha\",\n  \"admin_secret\": \"segredo-administrativo\"\n}\n</code></pre> <p>\u26a0\ufe0f O campo <code>admin_secret</code> \u00e9 obrigat\u00f3rio e deve coincidir com o valor da vari\u00e1vel <code>ADMIN_SECRET</code>.</p>"},{"location":"api/utilizacao.html#requisicao-de-registro","title":"\ud83d\udce4 Requisi\u00e7\u00e3o de Registro","text":""},{"location":"api/utilizacao.html#resposta-esperada","title":"\ud83d\udce5 Resposta Esperada","text":""},{"location":"api/utilizacao.html#login","title":"\ud83d\udd11 Login","text":"<p>Envie um <code>POST</code> para <code>/login</code> com:</p> <pre><code>{\n  \"email\": \"seu@email.com\",\n  \"senha\": \"suasenha\"\n}\n</code></pre> <p>Voc\u00ea receber\u00e1 um token JWT. Exemplo:</p> <pre><code>{\n  \"jwt\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}\n</code></pre>"},{"location":"api/utilizacao.html#requisicao-de-login","title":"\ud83d\udce4 Requisi\u00e7\u00e3o de Login","text":""},{"location":"api/utilizacao.html#resposta-com-token","title":"\ud83d\udce5 Resposta com Token","text":""},{"location":"api/utilizacao.html#consulta-rota-protegida","title":"\ud83d\udd0e Consulta (Rota Protegida)","text":"<p>Para acessar a rota <code>/consultar</code>, inclua o JWT no cabe\u00e7alho da requisi\u00e7\u00e3o:</p> <pre><code>Authorization: Bearer &lt;seu_token_jwt&gt;\n</code></pre>"},{"location":"api/utilizacao.html#erros-comuns-e-uso-correto-do-token-jwt","title":"\u26a0\ufe0f Erros comuns e uso correto do token JWT","text":"<p>Ao testar via navegador, \u00e9 comum esquecer de incluir o token JWT, o que resulta em erro de autentica\u00e7\u00e3o.</p>"},{"location":"api/utilizacao.html#tentativa-de-acesso-sem-autenticacao","title":"\u274c Tentativa de acesso sem autentica\u00e7\u00e3o","text":""},{"location":"api/utilizacao.html#onde-adicionar-o-token-recebido-no-login","title":"\ud83d\udd10 Onde adicionar o token recebido no login","text":"<p>No campo Authorization, selecione o tipo <code>Bearer</code> e cole o token JWT retornado:</p> <p></p>"},{"location":"api/utilizacao.html#como-identificar-que-o-token-foi-adicionado-corretamente","title":"\ud83d\udd12 Como identificar que o token foi adicionado corretamente","text":"<p>Se o token estiver presente, um \u00edcone de cadeado fechado deve aparecer na interface:</p> <p></p>"},{"location":"api/utilizacao.html#consulta-bem-sucedida-apos-autenticacao","title":"\u2705 Consulta bem-sucedida ap\u00f3s autentica\u00e7\u00e3o","text":"<p>Ap\u00f3s o token ser corretamente inserido, a requisi\u00e7\u00e3o protegida <code>/consultar</code> retorna os dados esperados:</p> <p></p>"},{"location":"aws/aws.html","title":"Documenta\u00e7\u00e3o \u2013 Projeto Scraping B3 + Deploy AWS Lightsail","text":""},{"location":"aws/aws.html#1-explicacao-do-projeto-do-banco-a-api","title":"1 \u00b7 Explica\u00e7\u00e3o do Projeto \u2014 do Banco \u00e0 API","text":"<p>Resumo cronol\u00f3gico das configura\u00e7\u00f5es para colocar a aplica\u00e7\u00e3o em produ\u00e7\u00e3o no AWS\u00a0Lightsail.</p>"},{"location":"aws/aws.html#11-criacao-do-banco-postgresql","title":"1.1 Cria\u00e7\u00e3o do banco PostgreSQL","text":"<ol> <li>Lightsail \u2192 Databases \u2192 Create database </li> <li>Plano Standard \u2013 1\u00a0GB / 40\u00a0GB SSD / 2\u00a0vCPUs (US\u00a0$\u202f15/m\u00eas)  </li> <li>Nome: <code>fastapi-db</code> \u00b7 Usu\u00e1rio mestre: <code>dbkitH</code> \u00b7 Porta: <code>5432</code> </li> <li>Public mode Enabled para testes iniciais.</li> </ol> Evid\u00eancia Screenshot Banco rec\u00e9m\u2011criado"},{"location":"aws/aws.html#12-teste-rapido-de-conectividade-via-cli","title":"1.2 Teste r\u00e1pido de conectividade via CLI","text":"<p>Para garantir que o banco esta funcionando:</p> Evid\u00eancia Screenshot Sa\u00edda bem sucedida\u201d"},{"location":"aws/aws.html#13-criacao-do-servico-de-conteiner","title":"1.3 Cria\u00e7\u00e3o do servi\u00e7o de cont\u00eainer","text":"<ol> <li>Lightsail \u2192 Containers \u2192 Create container service </li> <li>Nome: <code>fastapi-service</code> \u00b7 Plano Micro (US\u00a0$\u202f10/m\u00eas) \u00b7 Escala: 1 inst\u00e2ncia</li> </ol> Evid\u00eancia Screenshot Vis\u00e3o geral do cont\u00eainer"},{"location":"aws/aws.html#15-deploy-da-imagem-docker-variaveis-de-ambiente","title":"1.5 Deploy da imagem Docker + vari\u00e1veis de ambiente","text":"Item Valor Imagem <code>fernandokoelle/scraping_de_dados_b3:latest</code> Porta exposta <code>8000/TCP (HTTP)</code> Health\u2011check <code>/healthcheck</code> \u2014 HTTP\u00a0200 esperado Vari\u00e1veis <code>DATABASE_URL=postgresql://dbkitH:***@ls-42e\u2026amazonaws.com:5432/fastapi-db</code><code>SECRET_KEY=***</code> Evid\u00eancia Screenshot Aba \u201cDeploy\u201d com imagem, porta e env vars"},{"location":"aws/aws.html#2-como-acessar-a-aplicacao","title":"2 \u00b7 Como acessar a aplica\u00e7\u00e3o","text":"<p>Entre no link disponibilizado pelo conteiner da API e adicione a tag da FASTapi \"/docs\": <pre><code>`https://fastapi-service.k2ztsvpymsmvg.us-east-1.cs.amazonlightsail.com/docs`\n</code></pre></p>"},{"location":"aws/aws.html#3-endpoints-aws-testados","title":"3 \u00b7 Endpoints AWS Testados","text":"Endpoint Verbo Resultado Screenshot <code>FAST</code> DASHBOARD Overview <code>/healthcheck</code> GET 200 OK <code>/login</code> POST token JWT <code>/registrar</code> POST 201 Created <code>/consultar</code> GET <code>[ \u2026 ]</code>"},{"location":"aws/aws.html#4-tela-de-custos-dia-da-submissao","title":"4 \u00b7 Tela de Custos (dia da submiss\u00e3o)","text":"Se\u00e7\u00e3o Billing &amp; usage em DD/MM/AAAA. <ul> <li>Projec\u00f5es de custos mensais </li> </ul> Inst\u00e2ncias Container (Micro) Database 1\u202fGB Total (USD/m\u00eas) 1 US$\u00a010 US$\u00a015 US$\u00a025 5 US$\u00a050 US$\u00a015 US$\u00a065 10 US$\u00a0100 US$\u00a015 US$\u00a0115"},{"location":"aws/aws.html#5-video-de-execucao-1-min","title":"5 \u00b7 V\u00eddeo de Execu\u00e7\u00e3o (\u2264\u202f1\u202fmin)","text":"<p>\u25b6\ufe0f Assista aqui \u2013 INSIRA O LINK</p>"},{"location":"img/maas/main.html","title":"Main","text":""},{"location":"img/maas/main.html#objetivo","title":"Objetivo","text":"<p>Este Roteiro tem o objetivo a documenta\u00e7\u00e3o e implementa\u00e7\u00e3o de conceitos sobre uma plataforma de gerenciamento de hardware</p>"},{"location":"img/maas/main.html#tarefa-1","title":"Tarefa 1","text":""},{"location":"img/maas/main.html#1-verificar-se-esta-funcionando-e-se-o-status-esta-ativo","title":"1. Verificar se est\u00e1 funcionando e se o status est\u00e1 ativo.","text":""},{"location":"img/maas/main.html#2verificar-acessibilidade-na-propria-maquina","title":"2.Verificar acessibilidade na pr\u00f3pria m\u00e1quina:","text":"<p>Foi executado o seguinte comando  <pre><code> psql -U cloud -h 172.16.0.4 tasks\n</code></pre> psql: Inicia o cliente interativo do PostgreSQL.</p> <p>-U cloud: Espec\u00edfica o usu\u00e1rio do banco de dados, que no caso \u00e9 cloud.</p> <p>-h 172.16.0.4: Define o host (endere\u00e7o IP) do servidor PostgreSQL ao qual voc\u00ea deseja se conectar. Neste caso, a conex\u00e3o ser\u00e1 feita para o IP 172.16.0.4, que pode ser um outro servidor na rede ou at\u00e9 mesmo o pr\u00f3prio servidor se esse for o IP dele.</p> <p>tasks: Define o nome do banco de dados ao qual o usu\u00e1rio cloud tentar\u00e1 se conectar.</p> <p>Esse c\u00f3digo foi executado dentro do Server1. </p>"},{"location":"img/maas/main.html#3-acessibilidade-a-partir-da-maquina-main","title":"3. Acessibilidade a partir da m\u00e1quina main:","text":"<p>Usando o mesmo comando para verificar a conex\u00e3o interna, por\u00e9m agora a partir da minha m\u00e1quina main.  Instalamos o client na main usando o comando: <pre><code>sudo apt update &amp;&amp; sudo apt install postgresql-client -y\n</code></pre></p>"},{"location":"img/maas/main.html#4-porta-em-que-o-servico-esta-funcionando","title":"4. Porta em que o servi\u00e7o est\u00e1 funcionando:","text":"<p>Ao executar o nmap. Foi conferido que o servi\u00e7o est\u00e1 rodando na porta 5432: 5432/tcp open postgresql</p>"},{"location":"img/maas/main.html#tarefa-2","title":"Tarefa 2","text":""},{"location":"img/maas/main.html#1do-dashboard-do-maas-com-as-maquinas","title":"1.Do Dashboard do MAAS com as m\u00e1quinas.","text":""},{"location":"img/maas/main.html#2da-aba-de-imagens-com-as-imagens-sincronizadas","title":"2.Da aba de imagens, com as imagens sincronizadas","text":""},{"location":"img/maas/main.html#3-testes-de-hardware-para-cada-maquina","title":"3. Testes de Hardware para cada m\u00e1quina","text":""},{"location":"img/maas/main.html#maquina-1","title":"m\u00e1quina 1:","text":""},{"location":"img/maas/main.html#maquina-2","title":"m\u00e1quina 2:","text":""},{"location":"img/maas/main.html#maquina-3","title":"m\u00e1quina 3:","text":""},{"location":"img/maas/main.html#maquina-4","title":"m\u00e1quina 4:","text":""},{"location":"img/maas/main.html#maquina-5","title":"m\u00e1quina 5:","text":""},{"location":"img/maas/main.html#tarefa-3","title":"Tarefa 3","text":""},{"location":"img/maas/main.html#1maquinas-e-respectivos-ips","title":"1.m\u00e1quinas e respectivos IPs","text":""},{"location":"img/maas/main.html#2aplicacao-django","title":"2.Aplica\u00e7\u00e3o Django","text":""},{"location":"img/maas/main.html#3explicacao-da-aplicacao-manual-do-django","title":"3.Explica\u00e7\u00e3o da aplica\u00e7\u00e3o manual do Django:","text":"<p>a. Deploy feito pelo dashboard do maas - deploy por linha de comando n\u00e3o estava funcionando</p> <p>b. No ssh do server2 foi clonado o seguinte reposit\u00f3rio:  <pre><code>git clone https://github.com/raulikeda/tasks.git\n</code></pre> c. dentro do diretorio tasks. Foi feita a instala\u00e7\u00e3o <pre><code>./install.sh \n</code></pre> d. reboot do server2 <pre><code>sudo reboot\n</code></pre> e. testando o acesso: <pre><code>wget http://[172.16.0.9]:8080/admin/\n</code></pre> f. Ao testar o acesso obtivemos erros de conex\u00e3o:</p> <p>mudan\u00e7a no etc/hosts</p> <p>172.16.0.4 server1 (onde estava instalado o postgres)</p> <p>g. Tunel ssh:</p> <p>conectanmos no maas utilizando:  <pre><code>ssh cloud@10.103.0.X -L 8001:[172.16.0.9]:8080\n</code></pre> h. acesso no django feito: </p> <p>user: cloud</p> <p>senha: cloud</p>"},{"location":"img/maas/main.html#tarefa-4","title":"Tarefa 4","text":""},{"location":"img/maas/main.html#1-de-um-print-da-tela-do-dashboard-do-maas-com-as-3-maquinas-e-seus-respectivos-ips","title":"1. De um print da tela do Dashboard do MAAS com as 3 Maquinas e seus respectivos IPs.","text":""},{"location":"img/maas/main.html#2de-um-print-da-aplicacao-django-provando-que-voce-esta-conectado-ao-server2","title":"2.De um print da aplicacao Django, provando que voce est\u00e1 conectado ao server2","text":""},{"location":"img/maas/main.html#3de-um-print-da-aplicacao-django-provando-que-voce-esta-conectado-ao-server3","title":"3.De um print da aplicacao Django, provando que voce est\u00e1 conectado ao server3","text":""},{"location":"img/maas/main.html#4-explique-qual-diferenca-entre-instalar-manualmente-a-aplicacao-django-e-utilizando-o-ansible","title":"4. Explique qual diferenca entre instalar manualmente a aplicacao Django e utilizando o Ansible.","text":"<p>Com o Ansible, a instala\u00e7\u00e3o \u00e9 automatizada por meio de playbooks, garantindo consist\u00eancia, rapidez e escalabilidade, ideal para m\u00faltiplos servidores. Enquanto a abordagem manual oferece mais controle ela exige uma instala\u00e7\u00e3o para cada m\u00e1quina tornando-o menos escal\u00e1vel.</p>"},{"location":"img/maas/main.html#tarefa-5","title":"Tarefa 5.","text":""},{"location":"img/maas/main.html#1-de-um-print-da-tela-do-dashboard-do-maas-com-as-4-maquinas-e-seus-respectivos-ips","title":"1. De um print da tela do Dashboard do MAAS com as 4 Maquinas e seus respectivos IPs.","text":""},{"location":"img/maas/main.html#2altere-o-conteudo-da-mensagem-contida-na-funcao-index-do-arquivo-tasksviewspy-de-cada-server-para-distinguir-ambos-os-servers","title":"2.Altere o conte\u00fado da mensagem contida na fun\u00e7\u00e3o <code>index</code> do arquivo <code>tasks/views.py</code> de cada server para distinguir ambos os servers.","text":"<p>server 2:  </p> <p>server 3:   </p>"},{"location":"img/maas/main.html#3faca-um-get-request-para-o-path-que-voce-criou-em-urlspy-para-o-nginx-e-tire-2-prints-das-respostas-de-cada-request-provando-que-voce-esta-conectado-ao-server-4-que-e-o-proxy-reverso-e-que-ele-bate-cada-vez-em-um-server-diferente-server2-e-server3","title":"3.Fa\u00e7a um <code>GET request</code> para o path que voce criou em urls.py para o Nginx e tire 2 prints das respostas de cada request, provando que voce est\u00e1 conectado ao server 4, que \u00e9 o Proxy Reverso e que ele bate cada vez em um server diferente server2 e server3.","text":"<p>Criando o tunel:   </p> <p>For\u00e7ando o django a rodar na porta 8000 do server2:  </p> <p>For\u00e7ando o django a rodar na porta 8000 do server3:  </p> <p>Acessando os servers via localhost de um browser server 2:  </p> <p>server 3:  </p>"},{"location":"img/maas/main.html#discussoes","title":"Discuss\u00f5es","text":"<p>A instala\u00e7\u00e3o manual do PostgreSQL e Django foi direta, assim como o uso do SSH e MaaS CLI, facilitando o deploy inicial. No entanto, configurar DHCP, DNS e firewall exigiu aten\u00e7\u00e3o para garantir conectividade. O balanceamento de carga com Nginx foi desafiador, demandando ajustes nas regras de roteamento. Ferramentas como Ansible simplificaram o processo, tornando a implanta\u00e7\u00e3o mais eficiente.</p>"},{"location":"img/maas/main.html#conclusao","title":"Conclus\u00e3o","text":"<p>A instala\u00e7\u00e3o manual ajudou a entender cada parte do processo, mas exigiu mais tempo e cuidado com detalhes. O Ansible simplificou o deploy, tornando-o repet\u00edvel e confi\u00e1vel. O MaaS facilitou o gerenciamento das m\u00e1quinas, mas configurar rede e balanceamento de carga exigiu mais testes e ajustes.</p>"},{"location":"juju/main.html","title":"Relatorio","text":""},{"location":"juju/main.html#objetivo","title":"Objetivo","text":"<p>Este Roteiro tem o objetivo a documenta\u00e7\u00e3o e implementa\u00e7\u00e3o de conceitos sobre uma plataforma de gerenciamento de software e a comunica\u00e7\u00e3o entre aplicativos e servi\u00e7os</p>"},{"location":"juju/main.html#tarefa-1","title":"Tarefa 1","text":""},{"location":"juju/main.html#1-de-um-print-da-tela-do-dashboard-do-maas-com-as-maquinas-e-seus-respectivos-ips","title":"1. De um print da tela do Dashboard do MAAS com as Maquinas e seus respectivos IPs.","text":""},{"location":"juju/main.html#2-de-um-print-de-tela-do-comando-juju-status-depois-que-o-grafana-estiver-active","title":"2. De um print de tela do comando \"juju status\" depois que o Grafana estiver \"active\".","text":"<p>Status do Controller:  </p> <p>Status do openstack:  </p>"},{"location":"juju/main.html#3-de-um-print-da-tela-do-dashboard-do-grafana-com-o-prometheus-aparecendo-como-source","title":"3. De um print da tela do Dashboard do Grafana com o Prometheus aparecendo como source.","text":"<p>Acessado a partir de um tunelamento. Isso foi feito apos a integra\u00e7\u00e3o com o grafana: </p>"},{"location":"juju/main.html#4-prove-print-que-voce-esta-conseguindo-acessar-o-dashboard-a-partir-da-rede-do-insper","title":"4. Prove (print) que voc\u00ea est\u00e1 conseguindo acessar o Dashboard a partir da rede do Insper.","text":""},{"location":"juju/main.html#5-de-um-print-na-tela-que-mostra-as-aplicacoes-sendo-gerenciadas-pelo-juju","title":"5. De um print na tela que mostra as aplica\u00e7\u00f5es sendo gerenciadas pelo JUJU","text":"<p>Dashboard do JUJU - models:  </p> <p>Dashboard do JUJU - controlers:  </p>"},{"location":"juju/main.html#extra","title":"Extra:","text":"<p>Foi criado uma regra de NAT para o dashboard do JUJU - facilitar o acesso e evitar tunelamento: </p>"},{"location":"juju/main.html#discussoes","title":"Discuss\u00f5es:","text":"<p>A instala\u00e7\u00e3o do Juju e sua integra\u00e7\u00e3o com o MaaS foram relativamente tranquilas ap\u00f3s entender a l\u00f3gica de providers e credenciais. O uso do juju bootstrap para configurar o controlador exigiu aten\u00e7\u00e3o \u00e0s tags e s\u00e9rie correta, mas funcionou bem ap\u00f3s a prepara\u00e7\u00e3o. O deploy dos charms do Grafana e Prometheus foi direto, mas a integra\u00e7\u00e3o entre eles demandou leitura cuidadosa da documenta\u00e7\u00e3o. O acesso ao Dashboard do Grafana e a valida\u00e7\u00e3o do Prometheus como source exigiram configura\u00e7\u00e3o de t\u00fanel SSH ou NAT, o que foi um ponto mais t\u00e9cnico. No geral, o Juju facilitou bastante o gerenciamento dos servi\u00e7os distribu\u00eddos, embora o entendimento inicial da ferramenta tenha exigido um pouco mais de estudo.</p>"},{"location":"juju/main.html#conclusao","title":"Conclus\u00e3o:","text":"<p>O uso do Juju mostrou-se uma poderosa ferramenta de orquestra\u00e7\u00e3o de servi\u00e7os, especialmente por sua integra\u00e7\u00e3o direta com o MaaS, permitindo deploys consistentes e escal\u00e1veis em infraestrutura bare-metal. Comparado ao Ansible, Juju vai al\u00e9m, assumindo tamb\u00e9m o provisionamento das m\u00e1quinas. A abordagem baseada em charms simplificou o deploy do Grafana e Prometheus, e o dashboard do Juju ofereceu uma vis\u00e3o clara das aplica\u00e7\u00f5es em execu\u00e7\u00e3o</p>"},{"location":"maas/intro_maas.html","title":"\u2601\ufe0f Introdu\u00e7\u00e3o ao MAAS","text":"<p>O MAAS (Metal as a Service) \u00e9 uma ferramenta da Canonical que transforma hardware f\u00edsico em uma nuvem privada, automatizando o provisionamento, o gerenciamento e a libera\u00e7\u00e3o de m\u00e1quinas bare-metal.</p> <p>De forma pr\u00e1tica, o MAAS permite:</p> <ul> <li>Descoberta autom\u00e1tica de servidores conectados \u00e0 rede via PXE.</li> <li>Provisionamento r\u00e1pido de sistemas operacionais (Ubuntu, CentOS, etc.) em m\u00e1quinas f\u00edsicas.</li> <li>Gerenciamento centralizado de ciclos de vida: desde a instala\u00e7\u00e3o at\u00e9 a libera\u00e7\u00e3o e reutiliza\u00e7\u00e3o dos recursos.</li> </ul> <p>Em um cen\u00e1rio de cloud privada, o MAAS atua como a camada de IaaS que fornece inst\u00e2ncias bare-metal prontas para hospedar servi\u00e7os cr\u00edticos (como OpenStack, bancos de dados e balanceadores), garantindo controle total sobre hardware, performance dedicada e alta disponibilidade.</p> <p>Objetivo desta se\u00e7\u00e3o: demonstrar como utilizar o MAAS para provisionar e gerenciar servidores f\u00edsicos, preparando o ambiente para a implanta\u00e7\u00e3o de uma nuvem privada completa.</p>"},{"location":"maas/relatorio.html","title":"Relatorio","text":""},{"location":"maas/relatorio.html#objetivo","title":"Objetivo","text":"<p>Este Roteiro tem o objetivo a documenta\u00e7\u00e3o e implementa\u00e7\u00e3o de conceitos sobre uma plataforma de gerenciamento de hardware</p>"},{"location":"maas/relatorio.html#tarefa-1","title":"Tarefa 1","text":""},{"location":"maas/relatorio.html#1-verificar-se-esta-funcionando-e-se-o-status-esta-ativo","title":"1. Verificar se est\u00e1 funcionando e se o status est\u00e1 ativo.","text":""},{"location":"maas/relatorio.html#2verificar-acessibilidade-na-propria-maquina","title":"2.Verificar acessibilidade na pr\u00f3pria m\u00e1quina:","text":"<p>Foi executado o seguinte comando  <pre><code> psql -U cloud -h 172.16.0.4 tasks\n</code></pre> psql: Inicia o cliente interativo do PostgreSQL.</p> <p>-U cloud: Espec\u00edfica o usu\u00e1rio do banco de dados, que no caso \u00e9 cloud.</p> <p>-h 172.16.0.4: Define o host (endere\u00e7o IP) do servidor PostgreSQL ao qual voc\u00ea deseja se conectar. Neste caso, a conex\u00e3o ser\u00e1 feita para o IP 172.16.0.4, que pode ser um outro servidor na rede ou at\u00e9 mesmo o pr\u00f3prio servidor se esse for o IP dele.</p> <p>tasks: Define o nome do banco de dados ao qual o usu\u00e1rio cloud tentar\u00e1 se conectar.</p> <p>Esse c\u00f3digo foi executado dentro do Server1. </p>"},{"location":"maas/relatorio.html#3-acessibilidade-a-partir-da-maquina-main","title":"3. Acessibilidade a partir da m\u00e1quina main:","text":"<p>Usando o mesmo comando para verificar a conex\u00e3o interna, por\u00e9m agora a partir da minha m\u00e1quina main.  Instalamos o client na main usando o comando: <pre><code>sudo apt update &amp;&amp; sudo apt install postgresql-client -y\n</code></pre></p>"},{"location":"maas/relatorio.html#4-porta-em-que-o-servico-esta-funcionando","title":"4. Porta em que o servi\u00e7o est\u00e1 funcionando:","text":"<p>Ao executar o nmap. Foi conferido que o servi\u00e7o est\u00e1 rodando na porta 5432: 5432/tcp open postgresql</p>"},{"location":"maas/relatorio.html#tarefa-2","title":"Tarefa 2","text":""},{"location":"maas/relatorio.html#1do-dashboard-do-maas-com-as-maquinas","title":"1.Do Dashboard do MAAS com as m\u00e1quinas.","text":""},{"location":"maas/relatorio.html#2da-aba-de-imagens-com-as-imagens-sincronizadas","title":"2.Da aba de imagens, com as imagens sincronizadas","text":""},{"location":"maas/relatorio.html#3-testes-de-hardware-para-cada-maquina","title":"3. Testes de Hardware para cada m\u00e1quina","text":""},{"location":"maas/relatorio.html#maquina-1","title":"m\u00e1quina 1:","text":""},{"location":"maas/relatorio.html#maquina-2","title":"m\u00e1quina 2:","text":""},{"location":"maas/relatorio.html#maquina-3","title":"m\u00e1quina 3:","text":""},{"location":"maas/relatorio.html#maquina-4","title":"m\u00e1quina 4:","text":""},{"location":"maas/relatorio.html#maquina-5","title":"m\u00e1quina 5:","text":""},{"location":"maas/relatorio.html#tarefa-3","title":"Tarefa 3","text":""},{"location":"maas/relatorio.html#1maquinas-e-respectivos-ips","title":"1.m\u00e1quinas e respectivos IPs","text":""},{"location":"maas/relatorio.html#2aplicacao-django","title":"2.Aplica\u00e7\u00e3o Django","text":""},{"location":"maas/relatorio.html#3explicacao-da-aplicacao-manual-do-django","title":"3.Explica\u00e7\u00e3o da aplica\u00e7\u00e3o manual do Django:","text":"<p>a. Deploy feito pelo dashboard do maas - deploy por linha de comando n\u00e3o estava funcionando</p> <p>b. No ssh do server2 foi clonado o seguinte reposit\u00f3rio:  <pre><code>git clone https://github.com/raulikeda/tasks.git\n</code></pre> c. dentro do diretorio tasks. Foi feita a instala\u00e7\u00e3o <pre><code>./install.sh \n</code></pre> d. reboot do server2 <pre><code>sudo reboot\n</code></pre> e. testando o acesso: <pre><code>wget http://[172.16.0.9]:8080/admin/\n</code></pre> f. Ao testar o acesso obtivemos erros de conex\u00e3o:</p> <p>mudan\u00e7a no etc/hosts</p> <p>172.16.0.4 server1 (onde estava instalado o postgres)</p> <p>g. Tunel ssh:</p> <p>conectanmos no maas utilizando:  <pre><code>ssh cloud@10.103.0.X -L 8001:[172.16.0.9]:8080\n</code></pre> h. acesso no django feito: </p> <p>user: cloud</p> <p>senha: cloud</p>"},{"location":"maas/relatorio.html#tarefa-4","title":"Tarefa 4","text":""},{"location":"maas/relatorio.html#1-de-um-print-da-tela-do-dashboard-do-maas-com-as-3-maquinas-e-seus-respectivos-ips","title":"1. De um print da tela do Dashboard do MAAS com as 3 Maquinas e seus respectivos IPs.","text":""},{"location":"maas/relatorio.html#2de-um-print-da-aplicacao-django-provando-que-voce-esta-conectado-ao-server2","title":"2.De um print da aplicacao Django, provando que voce est\u00e1 conectado ao server2","text":""},{"location":"maas/relatorio.html#3de-um-print-da-aplicacao-django-provando-que-voce-esta-conectado-ao-server3","title":"3.De um print da aplicacao Django, provando que voce est\u00e1 conectado ao server3","text":""},{"location":"maas/relatorio.html#4-explique-qual-diferenca-entre-instalar-manualmente-a-aplicacao-django-e-utilizando-o-ansible","title":"4. Explique qual diferenca entre instalar manualmente a aplicacao Django e utilizando o Ansible.","text":"<p>Com o Ansible, a instala\u00e7\u00e3o \u00e9 automatizada por meio de playbooks, garantindo consist\u00eancia, rapidez e escalabilidade, ideal para m\u00faltiplos servidores. Enquanto a abordagem manual oferece mais controle ela exige uma instala\u00e7\u00e3o para cada m\u00e1quina tornando-o menos escal\u00e1vel.</p>"},{"location":"maas/relatorio.html#tarefa-5","title":"Tarefa 5.","text":""},{"location":"maas/relatorio.html#1-de-um-print-da-tela-do-dashboard-do-maas-com-as-4-maquinas-e-seus-respectivos-ips","title":"1. De um print da tela do Dashboard do MAAS com as 4 Maquinas e seus respectivos IPs.","text":""},{"location":"maas/relatorio.html#2altere-o-conteudo-da-mensagem-contida-na-funcao-index-do-arquivo-tasksviewspy-de-cada-server-para-distinguir-ambos-os-servers","title":"2.Altere o conte\u00fado da mensagem contida na fun\u00e7\u00e3o <code>index</code> do arquivo <code>tasks/views.py</code> de cada server para distinguir ambos os servers.","text":"<p>server 2:  </p> <p>server 3:   </p>"},{"location":"maas/relatorio.html#3faca-um-get-request-para-o-path-que-voce-criou-em-urlspy-para-o-nginx-e-tire-2-prints-das-respostas-de-cada-request-provando-que-voce-esta-conectado-ao-server-4-que-e-o-proxy-reverso-e-que-ele-bate-cada-vez-em-um-server-diferente-server2-e-server3","title":"3.Fa\u00e7a um <code>GET request</code> para o path que voce criou em urls.py para o Nginx e tire 2 prints das respostas de cada request, provando que voce est\u00e1 conectado ao server 4, que \u00e9 o Proxy Reverso e que ele bate cada vez em um server diferente server2 e server3.","text":"<p>Criando o tunel:   </p> <p>For\u00e7ando o django a rodar na porta 8000 do server2:  </p> <p>For\u00e7ando o django a rodar na porta 8000 do server3:  </p> <p>Acessando os servers via localhost de um browser server 2:  </p> <p>server 3:  </p>"},{"location":"maas/relatorio.html#discussoes","title":"Discuss\u00f5es","text":"<p>A instala\u00e7\u00e3o manual do PostgreSQL e Django foi direta, assim como o uso do SSH e MaaS CLI, facilitando o deploy inicial. No entanto, configurar DHCP, DNS e firewall exigiu aten\u00e7\u00e3o para garantir conectividade. O balanceamento de carga com Nginx foi desafiador, demandando ajustes nas regras de roteamento. Ferramentas como Ansible simplificaram o processo, tornando a implanta\u00e7\u00e3o mais eficiente.</p>"},{"location":"maas/relatorio.html#conclusao","title":"Conclus\u00e3o","text":"<p>A instala\u00e7\u00e3o manual ajudou a entender cada parte do processo, mas exigiu mais tempo e cuidado com detalhes. O Ansible simplificou o deploy, tornando-o repet\u00edvel e confi\u00e1vel. O MaaS facilitou o gerenciamento das m\u00e1quinas, mas configurar rede e balanceamento de carga exigiu mais testes e ajustes.</p>"},{"location":"open/conex_seg.html","title":"\ud83d\udd12 Conex\u00e3o e Seguran\u00e7a","text":""},{"location":"open/conex_seg.html#importe-seu-key-pair-ssh","title":"Importe seu key-pair SSH:","text":"<pre><code>openstack keypair create --public-key ~/.ssh/id_rsa.pub my-key\n</code></pre>"},{"location":"open/conex_seg.html#no-horizon-abra-o-security-group-default-e-adicione","title":"No Horizon, abra o security group default e adicione:","text":"<ul> <li>SSH (porta 22)  </li> <li>ALL ICMP</li> </ul>"},{"location":"open/conex_seg.html#_1","title":"\ud83d\udd12 Conex\u00e3o e Seguran\u00e7a","text":""},{"location":"open/config_ini.html","title":"\ud83d\udee0\ufe0f Configura\u00e7\u00e3o Inicial","text":"<p>Antes de iniciar foi consultado o guia oficial de configura\u00e7\u00e3o do OpenStack e preparado o ambiente de trabalho.</p>"},{"location":"open/config_ini.html#configuracao-inicial","title":"Configura\u00e7\u00e3o Inicial","text":"<p>Download das credenciais (<code>openrc</code>) <pre><code>wget https://docs.openstack.org/project-deploy-guide/charm-deployment-guide/latest/_downloads/c894c4911b9572f0b5f86bdfc5d12d8e/openrc -O ~/openrc\nsource ~/openrc\n</code></pre></p> <p>Instala\u00e7\u00e3o do OpenStack Client <pre><code>sudo snap install openstack-client --classic\n</code></pre></p>"},{"location":"open/config_ini.html#dashboard-horizon-acesso","title":"Dashboard Horizon (Acesso)","text":"<p>Para acessar o Horizon e observar as mudan\u00e7as em tempo real:</p> <p>Obter IP p\u00fablico do dashboard <pre><code>juju status --format=yaml openstack-dashboard \\\n  | grep public-address \\\n  | awk '{print $2}' \\\n  | head -1\n</code></pre> Exemplo de sa\u00edda: <code>10.246.114.76</code></p> <p>Recuperar senha de admin <pre><code>juju exec --unit keystone/leader leader-get admin_passwd\n</code></pre></p> <p>Acessar dashboard <pre><code>http://10.246.114.76/horizon\n</code></pre></p> <p>Credenciais <pre><code>User Name: admin  \nPassword: **********\nDomain: admin_domain\n</code></pre></p>"},{"location":"open/config_ini.html#mantenha-esta-aba-aberta-para-visualizar-as-alteracoes-de-forma-dinamica","title":"Mantenha esta aba aberta para visualizar as altera\u00e7\u00f5es de forma din\u00e2mica:","text":"<ul> <li> <p>Overview:   </p> </li> <li> <p>Topologia de rede:  </p> </li> <li> <p>Inst\u00e2ncias:   </p> </li> </ul>"},{"location":"open/desempenho.html","title":"\ud83d\udcca Valida\u00e7\u00e3o de Flavor","text":"<p>Este documento apresenta, de forma objetiva e fluida, os comandos executados dentro das inst\u00e2ncias para avaliar o desempenho e o processo de redimensionamento de flavors.</p>"},{"location":"open/desempenho.html#1-coleta-de-metricas-nas-vms","title":"1. Coleta de M\u00e9tricas nas VMs","text":""},{"location":"open/desempenho.html#11-uso-de-cpu-e-memoria","title":"1.1 Uso de CPU e Mem\u00f3ria","text":"<pre><code>htop  \n</code></pre>"},{"location":"open/desempenho.html#12-uso-de-disco","title":"1.2 Uso de Disco","text":"<pre><code>df -h  \n</code></pre>"},{"location":"open/desempenho.html#13-metricas-de-io-de-disco","title":"1.3 M\u00e9tricas de I/O de Disco","text":"<pre><code>iostat -xz 2 5  \n</code></pre>"},{"location":"open/desempenho.html#2-redimensionamento-de-flavor","title":"2. Redimensionamento de Flavor","text":""},{"location":"open/desempenho.html#21-solicitar-mudanca-de-flavor","title":"2.1 Solicitar mudan\u00e7a de flavor","text":"<pre><code>openstack server resize --flavor &lt;NOVO_FLAVOR&gt; &lt;SERVER_ID&gt;\n</code></pre>"},{"location":"open/desempenho.html#22-verificar-status-do-resize","title":"2.2 Verificar status do resize","text":"<pre><code>openstack server list\n</code></pre> <pre><code>+--------------------------------------+---------------------+--------+-----------------------------------------+\n| ID                                   | Name                | Status | Networks                                |\n+--------------------------------------+---------------------+--------+-----------------------------------------+\n| 67bc9a9a-5928-47c...                 | myCirrosServer      | RESIZE | admin_internal_net=192.168.111.139      |\n+--------------------------------------+---------------------+--------+-----------------------------------------+\n</code></pre>"},{"location":"open/desempenho.html#23-confirmar-redimensionamento","title":"2.3 Confirmar redimensionamento","text":"<pre><code>openstack server resize --confirm &lt;SERVER_ID&gt;\n</code></pre>"},{"location":"open/desempenho.html#24-reverter-redimensionamento","title":"2.4 Reverter redimensionamento","text":"<pre><code>openstack server resize --revert &lt;SERVER_ID&gt;\n</code></pre> <p>Observa\u00e7\u00e3o: Ap\u00f3s a confirma\u00e7\u00e3o, a inst\u00e2ncia reinicia automaticamente com o novo flavor. Durante a migra\u00e7\u00e3o, pode haver breve interrup\u00e7\u00e3o.</p> <p>Espa\u00e7o para print: Compara\u00e7\u00e3o de m\u00e9tricas antes e depois do resize.</p>"},{"location":"open/escala.html","title":"\ud83d\udcc8 Escalabilidade dos N\u00f3s","text":"<p>Escalar n\u00f3s de computa\u00e7\u00e3o e block storage no OpenStack amplia a capacidade, resili\u00eancia\u202fe desempenho do ambiente de nuvem.</p>"},{"location":"open/escala.html#pontoschave","title":"\ud83d\udd11 Pontos\u2011chave","text":"<ul> <li> <p>Capacidade de Processamento   Aumento do n\u00famero de inst\u00e2ncias simult\u00e2neas, atendendo mais usu\u00e1rios e aplica\u00e7\u00f5es.</p> </li> <li> <p>Alta Disponibilidade (HA)   Distribui\u00e7\u00e3o de cargas entre m\u00faltiplos n\u00f3s reduz o impacto de falhas.</p> </li> <li> <p>Desempenho e Lat\u00eancia   Dados e processos mais pr\u00f3ximos das VMs diminuem tempo de acesso.</p> </li> <li> <p>Escalabilidade Horizontal   Adicionar m\u00e1quinas (versus \u201cengordar\u201d uma s\u00f3) \u00e9 mais econ\u00f4mico e simples de gerenciar; servi\u00e7os como Nova e Ceph balanceiam cargas automaticamente.</p> </li> </ul>"},{"location":"open/escala.html#comandos-utilizados","title":"\ud83d\udee0\ufe0f Comandos Utilizados","text":"A\u00e7\u00e3o Comando Adicionar novo n\u00f3 de compute <code>juju add-unit nova-compute</code> Instalar block storage (Ceph OSD) <code>juju add-unit --to &lt;machine-id&gt; ceph-osd</code> <p>Passos pr\u00e9vios 1. Verificar no Dashboard do MAAS se h\u00e1 m\u00e1quina Allocated. 2. Fazer release da m\u00e1quina para deix\u00e1\u2011la livre antes do deploy.</p>"},{"location":"open/escala.html#status-do-juju-apos-a-insercao-do-node","title":"Status do JUJU ap\u00f3s a inser\u00e7\u00e3o do node:","text":""},{"location":"open/escala.html#diagrama-de-rede-insper-instancia","title":"\ud83d\uddbc\ufe0f Diagrama de Rede (Insper \u2192 Inst\u00e2ncia)","text":"<pre><code>flowchart TB\n    %% N\u00f3s principais\n    Insper[\"\ud83d\udcf6 Esta\u00e7\u00e3o de Trabalho\"]\n    Roteador[\"\ud83d\udee3\ufe0f Roteador F\u00edsico\"]\n\n    subgraph \".\"\n        direction TB\n        NginxLB[\"\ud83d\udee1\ufe0f NGINX Load Balancer\"]\n        API1[\"\ud83d\udc33 VM api-1\"]\n        API2[\"\ud83d\udc33 VM api-2\"]\n        DB[\"\ud83d\uddc4\ufe0f VM database\"]\n        TESTE(\"\ud83c\udf10 (192.169.0.0/24)\")\n    end \n    %% Conex\u00f5es externas\n    Insper e1@==&gt;|VPN / Ethernet&lt;br/&gt;172.16.0.0/20| Roteador\n    Roteador e2@==&gt;|NAT Externo| NginxLB\n\n    %% Conex\u00f5es internas (tracejadas)\n    NginxLB e3@==&gt;|80 /TCP| API1\n    NginxLB e4@==&gt;|80 /TCP| API2\n    API1 e5@==&gt;|5432 /TCP| DB\n    API2 e6@==&gt;|5432 /TCP| DB\n\n\n\n    e1@{ animate: true }\n    e2@{ animate: true }\n    e3@{ animate: true }\n    e4@{ animate: true }\n    e5@{ animate: true }\n    e6@{ animate: true }\n\n\n    %% Afinar as setas\n    linkStyle default stroke-width:1px</code></pre>"},{"location":"open/home.html","title":"home","text":""},{"location":"open/img_flavor.html","title":"\ud83d\uddbc\ufe0f Criando Imagens e Flavors","text":""},{"location":"open/img_flavor.html#criacao-de-imagem-no-glance","title":"Cria\u00e7\u00e3o de Imagem no Glance","text":"<ul> <li>Crie um diret\u00f3rio para as imagens:    <pre><code>mkdir -p ~/cloud-images\n</code></pre></li> <li>Fa\u00e7a o download da imagem Jammy amd64:    <pre><code>wget http://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img \\\n  -O ~/cloud-images/jammy-amd64.img\n</code></pre></li> <li>Importe a imagem para o Glance:    <pre><code>openstack image create --public --container-format bare \\\n  --disk-format qcow2 --file ~/cloud-images/jammy-amd64.img \\\n  jammy-amd64\n</code></pre></li> </ul>"},{"location":"open/img_flavor.html#criacao-de-flavors","title":"Cria\u00e7\u00e3o de Flavors","text":"<p>Criamos sabores (flavors) ajustados para cada tipo de inst\u00e2ncia, sem incluir disco ef\u00eamero (ephemeral disk), pois preferimos controlar explicitamente o armazenamento persistente via Volumes Cinder.</p> Nome vCPUs RAM (GB) Disk (GB) m1.tiny 1 1 20 m1.small 1 2 20 m1.medium 2 4 20 m1.large 4 8 20 <pre><code>openstack flavor create --ram 1024 --disk 20 --vcpus 1 m1.tiny\nopenstack flavor create --ram 2048 --disk 20 --vcpus 1 m1.small\nopenstack flavor create --ram 4096 --disk 20 --vcpus 2 m1.medium\nopenstack flavor create --ram 8192 --disk 20 --vcpus 4 m1.large\n</code></pre> <p>Nota: O disco ef\u00eamero \u00e9 armazenamento tempor\u00e1rio vinculado \u00e0 VM. Optamos por n\u00e3o usar esse disco para garantir que todos os dados cr\u00edticos sejam salvos em volumes permanentes via Cinder.</p>"},{"location":"open/img_flavor.html#conferindo-flavors-openstack-flavor-list","title":"Conferindo Flavors <code>openstack flavor list</code>:","text":""},{"location":"open/img_flavor.html#_1","title":"\ud83d\uddbc\ufe0f Criando Imagens e Flavors","text":""},{"location":"open/info.html","title":"\u2601\ufe0f Implanta\u00e7\u00e3o no OpenStack e Arquitetura da Solu\u00e7\u00e3o","text":"<p>Este documento detalha o processo de implanta\u00e7\u00e3o da infraestrutura e da aplica\u00e7\u00e3o em um ambiente OpenStack. A solu\u00e7\u00e3o foi estruturada para refletir um ambiente realista de produ\u00e7\u00e3o, com separa\u00e7\u00e3o clara de responsabilidades entre servi\u00e7os e inst\u00e2ncias.</p>"},{"location":"open/info.html#topologia-de-rede","title":"\ud83c\udf10 Topologia de Rede","text":"<p>A arquitetura da aplica\u00e7\u00e3o foi desenhada de forma a separar os componentes em tr\u00eas camadas principais:</p> <ul> <li>Load Balancer (NGINX): respons\u00e1vel por distribuir as requisi\u00e7\u00f5es entre as inst\u00e2ncias da API.</li> <li>API: duas inst\u00e2ncias id\u00eanticas da aplica\u00e7\u00e3o desenvolvida com FastAPI.</li> <li>Banco de Dados: uma inst\u00e2ncia com PostgreSQL, isolada das demais para seguran\u00e7a.</li> </ul> <p>\ud83d\udca1 Imagem com a topologia ser\u00e1 inserida aqui.</p> <p>A rede utilizada para a comunica\u00e7\u00e3o entre as inst\u00e2ncias foi <code>192.169.0.0/24</code>, com roteamento NAT configurado para sa\u00edda externa via IP flutuante.</p>"},{"location":"open/info.html#load-balancer-e-rota-health_check","title":"\u2696\ufe0f Load Balancer e Rota <code>/health_check</code>","text":"<p>O balanceamento de carga foi implementado utilizando o NGINX como proxy reverso, configurado para rotear as requisi\u00e7\u00f5es entre as APIs <code>api-1</code> e <code>api-2</code>.</p> <ul> <li>O arquivo <code>nginx.conf</code> define um bloco <code>upstream</code> com os nomes das inst\u00e2ncias registrados no arquivo <code>/etc/hosts</code>.</li> <li>A rota <code>/health_check</code> foi adicionada na API para permitir verifica\u00e7\u00e3o ativa de qual inst\u00e2ncia est\u00e1 respondendo.</li> </ul>"},{"location":"open/info.html#exemplo-de-resposta-da-rota-health_check","title":"Exemplo de resposta da rota <code>/health_check</code>:","text":"<pre><code>{\n  \"status\": \"ok\",\n  \"instance\": \"api-1\"\n}\n</code></pre> <p>Essa abordagem permite acompanhar se o balanceamento est\u00e1 funcionando corretamente.</p>"},{"location":"open/info.html#escolha-dos-flavors","title":"\ud83e\udde0 Escolha dos Flavors","text":"<p>Os flavors foram selecionados com base na fun\u00e7\u00e3o de cada inst\u00e2ncia:</p> Inst\u00e2ncia Fun\u00e7\u00e3o Flavor Motivo da Escolha <code>api-1</code> API <code>m1.tiny</code> Leve, suficiente para servir requisi\u00e7\u00f5es. <code>api-2</code> API <code>m1.tiny</code> Refor\u00e7o \u00e0 alta disponibilidade. <code>db-server</code> Banco de Dados <code>m1.small</code> Mem\u00f3ria extra para opera\u00e7\u00f5es SQL. <code>lb-nginx</code> Load Balancer <code>m1.tiny</code> Respons\u00e1vel apenas pelo encaminhamento. <p>A escolha privilegia o custo-benef\u00edcio, mantendo o sistema funcional com o menor uso de recursos poss\u00edvel.</p>"},{"location":"open/info.html#subida-das-instancias-e-configuracao-de-ips","title":"\ud83d\ude80 Subida das Inst\u00e2ncias e Configura\u00e7\u00e3o de IPs","text":"<p>As inst\u00e2ncias foram criadas via terminal com o comando <code>openstack server create</code> e associadas a IPs flutuantes.</p>"},{"location":"open/info.html#comandos-utilizados","title":"Comandos utilizados","text":"<pre><code>openstack server create --flavor m1.tiny --image jammy-amd64 \\\n  --nic net-id=&lt;id_rede_interna&gt; --security-group default \\\n  --key-name minha-chave api-1\n\nopenstack floating ip create ext_net\nopenstack server add floating ip api-1 &lt;ip_flutuante&gt;\n</code></pre>"},{"location":"open/info.html#resultado","title":"Resultado:","text":"Inst\u00e2ncia IP Interno IP Flutuante <code>api-1</code> 192.169.0.220 172.16.0.34 <code>api-2</code> 192.169.0.134 172.16.0.198 <code>db-server</code> 192.169.0.168 172.16.7.1 <code>lb-nginx</code> 192.169.0.15 172.16.8.94 <p>As regras de NAT foram criadas no roteador da rede, redirecionando a porta 8000 para a porta 80 do container NGINX.</p> <p>Este documento ser\u00e1 posteriormente dividido em se\u00e7\u00f5es espec\u00edficas no MkDocs.</p>"},{"location":"open/infra.html","title":"\ud83d\udd0c Deployment e Integra\u00e7\u00e3o","text":""},{"location":"open/infra.html#1-deploy-dos-charms","title":"1. Deploy dos Charms","text":"<p>Instalamos cada servi\u00e7o a partir do canal est\u00e1vel correspondente:</p> <pre><code># Armazenamento Ceph\njuju deploy ceph-mon --channel quincy/stable --config auth-supported=none --num-units 3\njuju deploy ceph-osd --channel quincy/stable --storage osd-devices=/dev/sdb\n\n# Cinder e MySQL\njuju deploy mysql-router --channel 8.0/stable\njuju deploy cinder --channel victoria/stable\njuju deploy cinder-mysql-router --channel 8.0/stable\n\n# Object Storage\njuju deploy ceph-radosgw --channel quincy/stable\n\n# Servi\u00e7os OpenStack\njuju deploy glance --channel stein/stable\njuju deploy keystone --channel victoria/stable\njuju deploy rabbitmq-server --channel 3.8/stable\njuju deploy placement --channel victoria/stable\njuju deploy nova-cloud-controller --channel victoria/stable\njuju deploy nova-compute --channel victoria/stable\njuju deploy neutron-api --channel liberty/stable\njuju deploy openstack-dashboard --channel victoria/stable\n\n# Vault para segredos\njuju deploy vault --channel 1.9/stable\njuju deploy vault-mysql-router --channel 8.0/stable\n</code></pre>"},{"location":"open/infra.html#2-integracao-de-servicos-com-juju-integrate","title":"2. Integra\u00e7\u00e3o de Servi\u00e7os com <code>juju integrate</code>","text":"<pre><code># Keystone \u2194 RabbitMQ e MySQL\njuju integrate keystone:identity-service rabbitmq-server:amqp\njuju integrate keystone:identity-service mysql-router:db\n\n# Glance \u2194 Keystone\njuju integrate glance:image-service keystone:identity-service\n\n# Nova \u2194 Placement e Keystone\njuju integrate nova-cloud-controller:placement-api placement:placement-api\njuju integrate nova-cloud-controller:identity-service keystone:identity-service\n\n# Neutron \u2194 Nova e RabbitMQ\njuju integrate neutron-api:neutron-api rabbitmq-server:amqp\njuju integrate neutron-api:cloud-compute nova-cloud-controller:cloud-compute\n\n# Cinder \u2194 MySQL e RabbitMQ\njuju integrate cinder:db mysql-router:db\njuju integrate cinder:amqp rabbitmq-server:amqp\n\n# Vault \u2194 MySQL (persist\u00eancia)\njuju integrate vault:mysql-router\n</code></pre>"},{"location":"open/instancias.html","title":"\ud83d\ude80 Lan\u00e7amento de Inst\u00e2ncias","text":"<p>Esta se\u00e7\u00e3o descreve a cria\u00e7\u00e3o de uma inst\u00e2ncia client_1, a verifica\u00e7\u00e3o de seu estado e a atribui\u00e7\u00e3o de um IP flutuante.</p>"},{"location":"open/instancias.html#criar-a-instancia","title":"Criar a inst\u00e2ncia","text":"<pre><code>openstack server create \\\n  --image jammy-amd64 \\\n  --flavor m1.tiny \\\n  --key-name admin \\\n  --network int_net \\\n  --security-group default \\\n  client_1\n</code></pre>"},{"location":"open/instancias.html#listar-instancias-no-projeto-project1","title":"Listar inst\u00e2ncias no projeto\u00a0<code>project1</code>","text":"<pre><code>openstack server list\n</code></pre> <p>Sa\u00edda de exemplo</p> <pre><code>+--------------------------------------+---------+--------+---------------------------------------+-------------+----------+\n| ID                                   | Name    | Status | Networks                              | Image       | Flavor   |\n+--------------------------------------+---------+--------+---------------------------------------+-------------+----------+\n| 627a33c8-3c55-4878-bce3-3c12fc04e4b9 | jammy-1 | ACTIVE | int_net=192.169.0.98, 10.246.116.39   | jammy-amd64 | m1.tiny  |\n+--------------------------------------+---------+--------+---------------------------------------+-------------+----------+\n</code></pre>"},{"location":"open/instancias.html#atribuir-ip-flutuante","title":"Atribuir IP flutuante","text":"<pre><code># Criar IP flutuante e capturar valor\nFLOATING_IP=$(openstack floating ip create -f value -c floating_ip_address ext_net)\n\n# Associar IP \u00e0 inst\u00e2ncia\nopenstack server add floating ip client_1 $FLOATING_IP\n</code></pre> <p>Verifique novamente:</p> <pre><code>openstack server list\n</code></pre>"},{"location":"open/instancias.html#_1","title":"\ud83d\ude80 Lan\u00e7amento de Inst\u00e2ncias","text":""},{"location":"open/instancias.html#testar-conectividade","title":"Testar conectividade","text":"<pre><code>ping $FLOATING_IP\n</code></pre> <p>Em caso de sucesso, conecte via SSH:</p> <pre><code>ssh -i ~/.ssh/id_rsa ubuntu@$FLOATING_IP\n</code></pre>"},{"location":"open/instancias.html#apos-o-setup-podemos-ver-o-dashboard-do-horizon-configurado","title":"Ap\u00f3s o SetUp, podemos ver o dashboard do Horizon configurado:","text":"<ul> <li> <p>Overview:   </p> </li> <li> <p>Topologia de rede:  </p> </li> <li> <p>Inst\u00e2ncias:   </p> </li> </ul>"},{"location":"open/instancias.html#comparativo-antes-depois","title":"\ud83d\udcca Comparativo Antes \u00d7 Depois","text":"Se\u00e7\u00e3o Antes Depois Inst\u00e2ncias Nenhuma inst\u00e2ncia criada (lista vazia). Inst\u00e2ncia <code>client</code> ativa IPs: 192.169.0.136 (interno) / 172.16.8.69 (flutuante). Topologia de Rede Diagrama vazio \u2014 sem redes, roteadores ou VMs. - 1 roteador ativo - 2 redes (ex.: <code>Internal_net</code>, <code>ext_net</code>) - Inst\u00e2ncia <code>client</code> conectada \u00e0 rede interna. Vis\u00e3o Geral do Projeto Todos os contadores zerados (inst\u00e2ncias, vCPUs, RAM, redes, roteadores, portas, regras, IPs). - 1 / 10 inst\u00e2ncias usadas - 1 vCPU - 1 GB de RAM - 2 redes - 1 roteador - 4 portas - 7 regras de seguran\u00e7a - 1 IP flutuante"},{"location":"open/lb.html","title":"\u2696\ufe0f Load Balancer","text":"<p>Para garantir alta disponibilidade e distribuir tr\u00e1fego entre as APIs, utilizamos o NGINX em modo reverse proxy com um bloco <code>upstream</code> apontando para os IPs internos das inst\u00e2ncias.</p>"},{"location":"open/lb.html#1-configuracao-de-nginxconf","title":"1. Configura\u00e7\u00e3o de <code>nginx.conf</code>","text":"<pre><code>http {\n  upstream backend_api {\n    server 192.169.0.11:8000;  # api-1 (interna)\n    server 192.169.0.12:8000;  # api-2 (interna)\n  }\n\n  server {\n    listen 80;\n    server_name _;\n\n    location / {\n      proxy_pass http://backend_api;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n\n    # Health check adicional\n    location /health_check {\n      proxy_pass http://backend_api/health_check;\n    }\n  }\n}\n</code></pre>"},{"location":"open/lb.html#2-etchosts-apelidos-para-facilitar-testes","title":"2. <code>/etc/hosts</code>: apelidos para facilitar testes","text":"<p>Para permitir que o NGINX resolva <code>api-1</code> e <code>api-2</code> como nomes em vez de IPs, adicionamos no <code>/etc/hosts</code>:</p> <pre><code># mapeamentos internos\n192.169.0.220  api-1\n192.169.0.134  api-2\n</code></pre> <p>Com isso, o <code>upstream backend_api</code> do <code>nginx.conf</code>:: <pre><code>server api-1:8000; \nserver api-2:8000; \n</code></pre></p>"},{"location":"open/lb.html#3-novo-endpoint-health_check","title":"3. Novo endpoint: <code>/health_check</code>","text":"<p>Para monitorar de forma ativa qual inst\u00e2ncia est\u00e1 respondendo, inclu\u00edmos na API um endpoint simples que retorna o hostname do cont\u00eainer:</p> <pre><code>from socket import gethostname\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n# Endpoint para conferir o load balancer\n@app.get(\"/health_check\", status_code=200)\nasync def health_check():\n    return {\"health_check\": gethostname()}\n</code></pre> <p> </p> <p>Em seguida, testamos via cliente HTTP (por exemplo, curl ou Swagger UI):</p> <pre><code>curl http://&lt;IP_FLUTUANTE&gt;/health_check\n</code></pre> <pre><code>{\n  \"health_check\": \"api-1\"\n}\n</code></pre> <p> </p> <p>\ud83d\udca1 Dica: Voc\u00ea pode criar um watch script ou um Prometheus exporter que periodicamente acesse <code>/health_check</code> para alertar automaticamente sobre inst\u00e2ncias inativas.</p>"},{"location":"open/objetivo.html","title":"\ud83c\udfaf Objetivo do Projeto OpenStack","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o completa do nosso projeto de Cloud Privada com OpenStack! Este material apresenta, de forma pr\u00e1tica e direta, todo o ciclo de vida da infraestrutura e dos servi\u00e7os, desde a configura\u00e7\u00e3o inicial at\u00e9 a opera\u00e7\u00e3o da aplica\u00e7\u00e3o.</p>"},{"location":"open/objetivo.html#1-provisionamento-de-infraestrutura","title":"\ud83c\udfd7\ufe0f 1. Provisionamento de Infraestrutura","text":"<ul> <li>Criamos inst\u00e2ncias de computa\u00e7\u00e3o para executar nossos componentes: APIs, banco de dados e balanceador.</li> <li>Registramos imagens no Glance e definimos flavors adequados para cada fun\u00e7\u00e3o, equilibrando custo e performance.</li> <li>Atribu\u00edmos IPs internos e um IP flutuante para permitir acesso externo via NAT.</li> </ul>"},{"location":"open/objetivo.html#2-configuracao-de-rede","title":"\ud83c\udf10 2. Configura\u00e7\u00e3o de Rede","text":"<ul> <li>Configuramos uma rede interna isolada (CIDR <code>192.169.0.0/24</code>) para toda a comunica\u00e7\u00e3o entre servi\u00e7os.</li> <li>Provisionamos um roteador que faz NAT de sa\u00edda e mapeia o IP flutuante para o balanceador NGINX.</li> <li>Implementamos regras de NAT no roteador f\u00edsico para acesso ao ambiente sem necessidade de t\u00faneis.</li> </ul>"},{"location":"open/objetivo.html#3-deploy-do-openstack","title":"\u2601\ufe0f 3. Deploy do OpenStack","text":"<ul> <li>Criamos projetos, usu\u00e1rios e atribu\u00edmos permiss\u00f5es no Keystone.</li> <li>Configuramos servi\u00e7os essenciais (Nova, Neutron, Cinder, Glance) para fornecer IaaS.</li> <li>Garantimos que todos os componentes estejam interconectados e operacionais.</li> </ul>"},{"location":"open/objetivo.html#4-deploy-da-aplicacao","title":"\ud83d\ude80 4. Deploy da Aplica\u00e7\u00e3o","text":"<ul> <li>Containerizamos a API FastAPI, o PostgreSQL e o NGINX.</li> <li>Realizamos push das imagens no Docker Hub e consumimos-nas nas inst\u00e2ncias OpenStack.</li> <li>Configuramos o upstream do NGINX e o endpoint <code>/health_check</code> para monitoramento ativo.</li> </ul>"},{"location":"open/objetivo.html#5-testes-e-validacao","title":"\ud83e\uddea 5. Testes e Valida\u00e7\u00e3o","text":"<ul> <li>Acessamos o painel Horizon para verificar topologia e status das inst\u00e2ncias.</li> <li>Executamos chamadas HTTP a <code>/health_check</code> e <code>/docs</code> para confirmar disponibilidade e balanceamento.</li> <li>Analisamos logs e m\u00e9tricas para avaliar desempenho e resili\u00eancia.</li> </ul>"},{"location":"open/objetivo.html#6-seguranca-e-boas-praticas","title":"\ud83d\udd12 6. Seguran\u00e7a e Boas Pr\u00e1ticas","text":"<ul> <li>Ap\u00f3s a valida\u00e7\u00e3o, removemos IPs p\u00fablicos das VMs internas, mantendo apenas o roteador como ponto de exposi\u00e7\u00e3o.</li> <li>Asseguramos que toda a comunica\u00e7\u00e3o entre servi\u00e7os ocorra via rede interna.</li> <li>Aplicamos pol\u00edticas de firewall e controles de seguran\u00e7a no Neutron e no roteador f\u00edsico.</li> </ul> <p>Objetivo principal: proporcionar um aprendizado pr\u00e1tico no uso do OpenStack, capacitando o leitor a configurar, operar e validar uma infraestrutura de nuvem privada de ponta a ponta.</p>"},{"location":"open/rede_roteador.html","title":"\ud83c\udf10 Configurando Redes e Roteador","text":""},{"location":"open/rede_roteador.html#rede-externa-ext_net","title":"Rede Externa <code>ext_net</code>","text":"<ul> <li>CIDR: <code>172.16.0.0/20</code></li> <li>Pool de IPs flutuantes: <code>172.16.7.0 \u2013 172.16.8.255</code></li> <li>Gateway: <code>172.16.0.1</code></li> <li>Tipo: flat sobre <code>physnet1</code></li> </ul> <pre><code># Criar a rede externa compartilhada\nopenstack network create ext_net \\\n  --external \\\n  --share \\\n  --provider-network-type flat \\\n  --provider-physical-network physnet1\n\n# Criar a sub-rede p\u00fablica (sem DHCP)\nopenstack subnet create ext_subnet \\\n  --network ext_net \\\n  --no-dhcp \\\n  --gateway 172.16.0.1 \\\n  --subnet-range 172.16.0.0/20 \\\n  --allocation-pool start=172.16.7.0,end=172.16.8.255\n</code></pre>"},{"location":"open/rede_roteador.html#rede-interna-int_net-roteador","title":"Rede Interna <code>int_net</code> + Roteador","text":"<ul> <li>CIDR interno: <code>192.169.0.0/24</code></li> <li>Roteador: <code>admin_router</code> (liga interna \u2192 externa)</li> </ul> <pre><code># Criar rede privada para as VMs\nopenstack network create --internal int_net\n\n# Criar sub-rede interna\nopenstack subnet create int_subnet \\\n  --network int_net \\\n  --subnet-range 192.169.0.0/24\n\n# Criar roteador e conectar redes\nopenstack router create admin_router\nopenstack router add subnet admin_router int_subnet\nopenstack router set admin_router --external-gateway ext_net\n</code></pre>"},{"location":"open/status.html","title":"\u2705 Verifica\u00e7\u00e3o do Estado","text":"<p>Confirmamos o estado de todos os servi\u00e7os:</p> <pre><code>watch -n 1 --color \"juju status --color\"\n</code></pre> <p>Na sa\u00edda, Apps devem estar <code>active/idle</code> e o Vault sem bloqueio.</p> <p> </p> <p>O Dashboard do MaaS Ap\u00f3s a cria\u00e7\u00e3o da infraestrutura: </p> <p> </p>"},{"location":"open/subindo_api.html","title":"\ud83d\ude80 Subindo aplica\u00e7\u00e3o","text":""},{"location":"open/subindo_api.html#subindo-a-aplicacao","title":"\ud83c\udfac Subindo a Aplica\u00e7\u00e3o","text":""},{"location":"open/subindo_api.html#1-flavors-das-instancias","title":"1. Flavors das Inst\u00e2ncias","text":"Inst\u00e2ncia Fun\u00e7\u00e3o Flavor Motivo da Escolha <code>api-1</code> API <code>m1.tiny</code> Leve, suficiente para servir requisi\u00e7\u00f5es. <code>api-2</code> API <code>m1.tiny</code> Refor\u00e7o \u00e0 alta disponibilidade. <code>db-server</code> Banco de Dados <code>m1.small</code> Mem\u00f3ria extra para opera\u00e7\u00f5es SQL. <code>lb-nginx</code> Load Balancer <code>m1.tiny</code> Respons\u00e1vel apenas pelo encaminhamento. <p>A escolha privilegia o custo-benef\u00edcio, mantendo o sistema funcional com o menor uso de recursos poss\u00edvel.</p>"},{"location":"open/subindo_api.html#2-criacao-das-instancias-e-atribuicao-de-ips","title":"2. Cria\u00e7\u00e3o das Inst\u00e2ncias e Atribui\u00e7\u00e3o de IPs","text":"<p>As inst\u00e2ncias foram criadas via CLI do OpenStack:</p> <pre><code>openstack server create --image jammy-amd64 \\\n  --flavor &lt;FLAVOR&gt; \\\n  --key-name admin \\\n  --network int_net \\\n  &lt;NOME_INSTANCIA&gt;\n</code></pre> <p>Em seguida, associamos IPs flutuantes para testes iniciais:</p> <pre><code>FLOATING_IP=$(openstack floating ip create -f value -c floating_ip_address ext_net)\nopenstack server add floating ip &lt;NOME_INSTANCIA&gt; $FLOATING_IP\n</code></pre>"},{"location":"open/subindo_api.html#enderecos-atribuidos","title":"Endere\u00e7os atribu\u00eddos","text":"Inst\u00e2ncia IP Interno IP Flutuante <code>api-1</code> 192.169.0.220 172.16.0.34 <code>api-2</code> 192.169.0.134 172.16.0.198 <code>db-server</code> 192.169.0.168 172.16.7.1 <code>lb-nginx</code> 192.169.0.15 172.16.8.94"},{"location":"open/subindo_api.html#3-provisionamento-da-aplicacao","title":"3. Provisionamento da Aplica\u00e7\u00e3o","text":"<p>Para configurar cada inst\u00e2ncia:</p> <ol> <li>SSH: conecte-se usando sua chave privada:    <pre><code>ssh -i ~/cloud-keys/admin-key ubuntu@&lt;IP_FLUTUANTE&gt;\n</code></pre></li> <li>Instala\u00e7\u00e3o do Docker:    <pre><code>sudo apt update\nsudo apt install -y docker.io\nsudo usermod -aG docker $USER\n</code></pre></li> <li>Pull das imagens Docker:    <pre><code>docker pull &lt;SEU_REPO&gt;/api:latest\ndocker pull &lt;SEU_REPO&gt;/database:latest\ndocker pull &lt;SEU_REPO&gt;/lb-nginx:latest\n</code></pre></li> <li>Inicializa\u00e7\u00e3o dos containers:    <pre><code>docker run -d --name api-1 \\\n  -p 8000:8000 \\\n  &lt;SEU_REPO&gt;/api:latest\n# Repita em api-2, db-server e lb-nginx conforme necess\u00e1rio.\n</code></pre></li> </ol>"},{"location":"open/subindo_api.html#servers-em-que-cada-intancia-foi-alocada","title":"Servers em que cada int\u00e2ncia foi alocada:","text":"<ol> <li> <p>API-1:   </p> </li> <li> <p>API-2:   </p> </li> <li> <p>base de dados:   </p> </li> <li> <p>NGINX:   </p> </li> </ol> <p>Observa\u00e7\u00e3o: detalhes de configura\u00e7\u00e3o de NGINX e regras de NAT est\u00e3o documentados nas se\u00e7\u00f5es de Load Balancer e Topologia de Rede.</p>"},{"location":"open/teste.html","title":"teste","text":""},{"location":"open/topologia.html","title":"\ud83c\udf10 Topologia de Rede","text":"<p>A arquitetura da aplica\u00e7\u00e3o foi desenhada em tr\u00eas camadas, isolando responsabilidades e refor\u00e7ando a seguran\u00e7a:</p> <ul> <li>Load Balancer (NGINX)   Recebe o tr\u00e1fego externo atrav\u00e9s do IP flutuante e distribui as requisi\u00e7\u00f5es entre as inst\u00e2ncias da API.  </li> <li>API   Duas inst\u00e2ncias id\u00eanticas (<code>api-1</code> e <code>api-2</code>) executando a aplica\u00e7\u00e3o FastAPI.  </li> <li>Banco de Dados   Inst\u00e2ncia \u00fanica com PostgreSQL, separada logicamente para evitar acesso direto da internet.</li> </ul> <p>\ud83d\udca1 Importante: Ap\u00f3s a instala\u00e7\u00e3o, removemos o IP flutuante das inst\u00e2ncias <code>api-1</code>, <code>api-2</code> e <code>db-server</code> por motivos de seguran\u00e7a. A comunica\u00e7\u00e3o entre API e banco de dados passa apenas pela rede interna (CIDR <code>192.169.0.0/24</code>).</p>"},{"location":"open/topologia.html#topologia-no-dashboard-do-openstack","title":"Topologia no Dashboard do OpenStack","text":"<p>A interface Horizon do OpenStack oferece duas perspectivas complementares da nossa rede:</p> <ul> <li> <p>Modo Topologia: mostra conex\u00f5es em camadas entre redes, roteador e inst\u00e2ncias.  </p> </li> <li> <p>Modo Gr\u00e1fico: exibe a mesma estrutura em um diagrama em cluster, facilitando a visualiza\u00e7\u00e3o do roteador central e dos n\u00f3s. </p> </li> </ul>"},{"location":"open/topologia.html#detalhes","title":"Detalhes","text":"<ul> <li>Rede Externa (linha azul)   \u2013 Conecta o roteador \u00e0 Internet p\u00fablica; o IP flutuante est\u00e1 vinculado apenas ao NGINX.  </li> <li>Rede Interna (linha laranja, CIDR <code>192.169.0.0/24</code>)   \u2013 Isola a comunica\u00e7\u00e3o entre as inst\u00e2ncias <code>api-1</code>, <code>api-2</code> e <code>database</code>.  </li> <li>Roteador   \u2013 Faz NAT de entrada (PREROUTING) do IP flutuante para o NGINX e NAT de sa\u00edda (POSTROUTING) para a Internet.  </li> <li>Inst\u00e2ncias   \u2013 Ap\u00f3s a implanta\u00e7\u00e3o, IP flutuante removido de <code>api-1</code>, <code>api-2</code> e <code>database</code> por seguran\u00e7a; elas acessam a Internet via NAT do roteador apenas quando necess\u00e1rio.</li> </ul> <p>\ud83d\udca1 Vantagens desta vis\u00e3o - Confirma\u00e7\u00e3o imediata de sub-redes, roteadores e interfaces ativas - Diagn\u00f3stico visual de gargalos na topologia - Simplifica\u00e7\u00e3o do troubleshooting sem necessidade de comandos CLI</p>"},{"location":"open/topologia.html#fluxo-de-uma-requisicao","title":"Fluxo de uma Requisi\u00e7\u00e3o","text":"<ol> <li>O usu\u00e1rio faz uma chamada HTTP para o IP flutuante provisionado no NGINX.  </li> <li>O NGINX (load balancer) recebe a requisi\u00e7\u00e3o e, de acordo com sua pol\u00edtica de balanceamento, encaminha para api-1 ou api-2.  </li> <li>A inst\u00e2ncia de API tratadora conecta-se ao banco de dados via rede interna para executar consultas ou grava\u00e7\u00f5es.  </li> <li>A resposta percorre o caminho inverso at\u00e9 o usu\u00e1rio.</li> </ol> <pre><code>%%{init: {\n  \"theme\": \"base\",\n  \"themeVariables\": {\n    \"primaryColor\": \"#ADD8E6\",\n    \"primaryTextColor\": \"#000000\",\n    \"secondaryColor\": \"#CCCCCC\",\n    \"secondaryTextColor\": \"#0D47A1\",\n    \"tertiaryColor\": \"#CCCCCC\",\n    \"tertiaryTextColor\": \"#000000\",\n    \"lineColor\": \"#000000\",\n    \"edgeLabelBack\": \"#000000\"\n  }\n}}%%\n\n\nflowchart LR\n    %% Defini\u00e7\u00e3o dos n\u00f3s\n    User[User]\n\n    subgraph \"192.169.0.0/24\"\n      direction TB\n      LB[nginx-lb]\n      API1[API-1]\n      API2[API-2]\n      DB[(Database)]\n\n      %% Conex\u00f5es internas (linhas tracejadas)\n      LB e1@==&gt; API1\n      LB e2@==&gt; API2\n      API1 e3@==&gt; DB\n      API2 e4@==&gt; DB\n    end\n\n    %% Conex\u00e3o do usu\u00e1rio\n    User e5@==&gt;|request&lt;br&gt;172.16.0.0/20| LB\n    e1@{ animate: true }\n    e2@{ animate: true }\n    e3@{ animate: true }\n    e4@{ animate: true }\n    e5@{ animate: true }\n\n    %% Diminui a grossura das setas \n    linkStyle default stroke-width:1px</code></pre>"},{"location":"open/topologia.html#detalhes-de-rede","title":"Detalhes de Rede","text":"<ul> <li>Rede externa: </li> <li>CIDR de sa\u00edda NAT: <code>172.16.0.0/20</code> </li> <li>IP flutuante associado apenas ao NGINX  </li> <li>Rede interna: </li> <li>CIDR: <code>192.169.0.0/24</code> </li> <li>Comunica\u00e7\u00e3o entre <code>api-1</code>, <code>api-2</code> e <code>db-server</code> sem exposi\u00e7\u00e3o p\u00fablica  </li> </ul>"},{"location":"open/topologia.html#regra-de-nat-para-acesso-externo","title":"Regra de NAT para Acesso Externo","text":"<p>Para permitir o acesso ao seu ambiente via roteador f\u00edsico sem criar t\u00faneis, configuramos uma regra de NAT no roteador:</p> <p></p>"},{"location":"open/vault.html","title":"\ud83d\udd10 Vault + Certificado CA","text":""},{"location":"open/vault.html#configurar-variavel-de-ambiente","title":"Configurar vari\u00e1vel de ambiente","text":"<pre><code>export VAULT_ADDR=\"http://172.16.0.55:8200\"\n</code></pre>"},{"location":"open/vault.html#inicializacao-do-vault","title":"Inicializa\u00e7\u00e3o do Vault","text":"<pre><code>vault operator init -key-shares=5 -key-threshold=3\n</code></pre> <p>Sample output:</p> <pre><code>Unseal Key 1: XONSc5Ku8HJu+ix/zbzWhMvDTiPpwWX0W1X/e/J1Xixv\nUnseal Key 2: J/fQCPvDeMFJT3WprfPy17gwvyPxcvf+GV751fTHUoN/\nUnseal Key 3: +bRfX5HMISegsODqNZxvNcupQp/kYQuhsQ2XA+GamjY4\nUnseal Key 4: FMRTPJwzykgXFQOl2XTupw2lfgLOXbbIep9wgi9jQ2ls\nUnseal Key 5: 7rrxiIVQQWbDTJPMsqrZDKftD6JxJi6vFOlyC0KSabDB\n\nInitial Root Token: s.ezlJjFw8ZDZO6KbkAkm605Qv\n\nVault initialized with 5 key shares and a key threshold of 3. Please securely\ndistribute the key shares printed above.\n</code></pre>"},{"location":"open/vault.html#unseal-do-vault","title":"Unseal do Vault","text":"<p>Utilize tr\u00eas chaves \u00fanicas para desbloquear o cofre:</p> <pre><code>vault operator unseal XONSc5Ku8HJu+ix/zbzWhMvDTiPpwWX0W1X/e/J1Xixv\nvault operator unseal FMRTPJwzykgXFQOl2XTupw2lfgLOXbbIep9wgi9jQ2ls\nvault operator unseal 7rrxiIVQQWbDTJPMsqrZDKftD6JxJi6vFOlyC0KSabDB\n</code></pre>"},{"location":"open/vault.html#geracao-de-token-temporario","title":"Gera\u00e7\u00e3o de Token Tempor\u00e1rio","text":"<pre><code>export VAULT_TOKEN=\"s.ezlJjFw8ZDZO6KbkAkm605Qv\"\nvault token create -ttl=10m\n</code></pre> <p>Sample output:</p> <pre><code>Key                  Value\n---                  -----\ntoken                s.QMhaOED3UGQ4MeH3fmGOpNED\ntoken_accessor       nApB972Dp2lnTTIF5VXQqnnb\ntoken_duration       10m\ntoken_renewable      true\ntoken_policies       [\"root\"]\npolicies             [\"root\"]\n</code></pre>"},{"location":"open/vault.html#autorizar-o-charm-vault","title":"Autorizar o Charm Vault","text":"<p>Aten\u00e7\u00e3o: a partir da \u00faltima vers\u00e3o do Juju, utilize <code>juju run</code> em vez de <code>juju run-action --wait</code>.</p> <pre><code>juju run vault/leader authorize-charm token=s.QMhaOED3UGQ4MeH3fmGOpNED\n</code></pre>"},{"location":"open/vault.html#gerar-certificado-ca","title":"Gerar Certificado CA","text":"<p>Para criar o root CA utilizado pelo Vault:</p> <pre><code>juju run vault/leader generate-root-ca\n</code></pre> <p>Sa\u00edda esperada: <code>root_ca_cert</code> em base64 ou caminho para o arquivo <code>.pem</code>, usado para clientes confi\u00e1veis.</p> <p>Com estas etapas, o Vault est\u00e1 inicializado, desbloqueado, autorizado e pronto para emitir certificados, garantindo uma integra\u00e7\u00e3o segura com seus servi\u00e7os OpenStack.</p>"},{"location":"user/teste.html","title":"teste","text":""}]}